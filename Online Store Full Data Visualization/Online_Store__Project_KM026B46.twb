<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.20.1106.0321                               -->
<workbook original-version='18.1' source-build='2020.4.0 (20204.20.1106.0321)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ORDERS (Online assignment1 DATASET)' inline='true' name='federated.19e9d451md2q431af4r410l45vz4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Online assignment1 DATASET' name='excel-direct.170av240et761518lvohm1gjdfe2'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Abhishek Mishra/Downloads/Online assignment1 DATASET.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='ORDERS' table='[ORDERS$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='Order Date' ordinal='2' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='ORDERS' table='[ORDERS$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' date-parse-format='MM/dd/yyyy' name='Order Date' ordinal='2' />
              <column datatype='date' date-parse-format='MM/dd/yyyy' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='PEOPLE' table='[PEOPLE$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='RETURNS' table='[RETURNS$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[ORDERS].[Category]' />
          <map key='[City]' value='[ORDERS].[City]' />
          <map key='[Country]' value='[ORDERS].[Country]' />
          <map key='[Customer ID]' value='[ORDERS].[Customer ID]' />
          <map key='[Customer Name]' value='[ORDERS].[Customer Name]' />
          <map key='[Discount]' value='[ORDERS].[Discount]' />
          <map key='[Market]' value='[ORDERS].[Market]' />
          <map key='[Order Date]' value='[ORDERS].[Order Date]' />
          <map key='[Order ID (RETURNS)]' value='[RETURNS].[Order ID]' />
          <map key='[Order ID]' value='[ORDERS].[Order ID]' />
          <map key='[Order Priority]' value='[ORDERS].[Order Priority]' />
          <map key='[Person]' value='[PEOPLE].[Person]' />
          <map key='[Postal Code]' value='[ORDERS].[Postal Code]' />
          <map key='[Product ID]' value='[ORDERS].[Product ID]' />
          <map key='[Product Name]' value='[ORDERS].[Product Name]' />
          <map key='[Profit]' value='[ORDERS].[Profit]' />
          <map key='[Quantity]' value='[ORDERS].[Quantity]' />
          <map key='[Region (PEOPLE)]' value='[PEOPLE].[Region]' />
          <map key='[Region (RETURNS)]' value='[RETURNS].[Region]' />
          <map key='[Region]' value='[ORDERS].[Region]' />
          <map key='[Returned]' value='[RETURNS].[Returned]' />
          <map key='[Row ID]' value='[ORDERS].[Row ID]' />
          <map key='[Sales]' value='[ORDERS].[Sales]' />
          <map key='[Segment]' value='[ORDERS].[Segment]' />
          <map key='[Ship Date]' value='[ORDERS].[Ship Date]' />
          <map key='[Ship Mode]' value='[ORDERS].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[ORDERS].[Shipping Cost]' />
          <map key='[State]' value='[ORDERS].[State]' />
          <map key='[Sub-Category]' value='[ORDERS].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>6</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[PEOPLE]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[ORDERS]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ORDERS_FDB8681D5E20468D8D48039E76303022]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[PEOPLE]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PEOPLE_171C112C88F8412ABC24636DF184EBD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (PEOPLE)]</local-name>
            <parent-name>[PEOPLE]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[PEOPLE_171C112C88F8412ABC24636DF184EBD7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (RETURNS)]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (RETURNS)]</local-name>
            <parent-name>[RETURNS]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
      </column>
      <column caption='ShipModeDayRequired' datatype='integer' name='[Calculation_1640436172461154308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IIF([Ship Mode]==&apos;Same Day&apos;,0,IIF([Ship Mode]==&apos;first class&apos;,2,IIf([Ship Mode]==&apos;second class&apos;,3,5)))' />
      </column>
      <column caption='DelayDelivery ' datatype='string' name='[Calculation_1640436172483256326]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIf([Calculation_1640436172460761091]-[Calculation_1640436172461154308]&gt;0,&apos;Y&apos;,&apos;N&apos;)' />
      </column>
      <column caption='IsEarly' datatype='string' name='[Calculation_1640436172493524999]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIf([Calculation_1640436172460761091]-[Calculation_1640436172461154308]&lt;0,&apos;Y&apos;,&apos;N&apos;)' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='CustomerReturnCount' datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Customer Name]' default='&quot;0 Time Return&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;1 Time Return&quot;'>
            <value>&quot;Aaron Bergman&quot;</value>
            <value>&quot;Aaron Hawkins&quot;</value>
            <value>&quot;Adrian Barton&quot;</value>
            <value>&quot;Aimee Bixby&quot;</value>
            <value>&quot;Alan Dominguez&quot;</value>
            <value>&quot;Alan Haines&quot;</value>
            <value>&quot;Alan Schoenberger&quot;</value>
            <value>&quot;Alan Shonely&quot;</value>
            <value>&quot;Alex Avila&quot;</value>
            <value>&quot;Alex Russell&quot;</value>
            <value>&quot;Allen Goldenen&quot;</value>
            <value>&quot;Andrew Roberts&quot;</value>
            <value>&quot;Andy Yotov&quot;</value>
            <value>&quot;Anemone Ratner&quot;</value>
            <value>&quot;Ann Chong&quot;</value>
            <value>&quot;Anna Chung&quot;</value>
            <value>&quot;Annie Thurman&quot;</value>
            <value>&quot;Annie Zypern&quot;</value>
            <value>&quot;Anthony Rawles&quot;</value>
            <value>&quot;Art Ferguson&quot;</value>
            <value>&quot;Arthur Gainer&quot;</value>
            <value>&quot;Arthur Wiediger&quot;</value>
            <value>&quot;Barry Franz&quot;</value>
            <value>&quot;Barry Französisch&quot;</value>
            <value>&quot;Barry Gonzalez&quot;</value>
            <value>&quot;Barry Pond&quot;</value>
            <value>&quot;Barry Weirich&quot;</value>
            <value>&quot;Ben Peterman&quot;</value>
            <value>&quot;Ben Wallace&quot;</value>
            <value>&quot;Berenike Kampe&quot;</value>
            <value>&quot;Beth Fritzler&quot;</value>
            <value>&quot;Beth Thompson&quot;</value>
            <value>&quot;Bill Donatelli&quot;</value>
            <value>&quot;Bill Eplett&quot;</value>
            <value>&quot;Bill Tyler&quot;</value>
            <value>&quot;Brad Eason&quot;</value>
            <value>&quot;Brad Norvell&quot;</value>
            <value>&quot;Bradley Drucker&quot;</value>
            <value>&quot;Brian Dahlen&quot;</value>
            <value>&quot;Brian Derr&quot;</value>
            <value>&quot;Brian Stugart&quot;</value>
            <value>&quot;Brosina Hoffman&quot;</value>
            <value>&quot;Bruce Geld&quot;</value>
            <value>&quot;Bruce Stewart&quot;</value>
            <value>&quot;Bryan Davis&quot;</value>
            <value>&quot;Cari Sayre&quot;</value>
            <value>&quot;Carlos Meador&quot;</value>
            <value>&quot;Carol Adams&quot;</value>
            <value>&quot;Carol Triggs&quot;</value>
            <value>&quot;Cathy Prescott&quot;</value>
            <value>&quot;Chad Cunningham&quot;</value>
            <value>&quot;Charles McCrossin&quot;</value>
            <value>&quot;Chloris Kastensmidt&quot;</value>
            <value>&quot;Chris Selesnick&quot;</value>
            <value>&quot;Christina DeMoss&quot;</value>
            <value>&quot;Christina VanderZanden&quot;</value>
            <value>&quot;Christy Brittain&quot;</value>
            <value>&quot;Chuck Clark&quot;</value>
            <value>&quot;Claire Gute&quot;</value>
            <value>&quot;Clay Cheatham&quot;</value>
            <value>&quot;Clay Rozendal&quot;</value>
            <value>&quot;Clytie Kelty&quot;</value>
            <value>&quot;Corey Catlett&quot;</value>
            <value>&quot;Corey Roper&quot;</value>
            <value>&quot;Craig Molinari&quot;</value>
            <value>&quot;Damala Kotsonis&quot;</value>
            <value>&quot;Dan Lawera&quot;</value>
            <value>&quot;Daniel Byrd&quot;</value>
            <value>&quot;Daniel Raglin&quot;</value>
            <value>&quot;Darrin Sayre&quot;</value>
            <value>&quot;Dave Brooks&quot;</value>
            <value>&quot;Dave Hallsten&quot;</value>
            <value>&quot;David Flashing&quot;</value>
            <value>&quot;David Smith&quot;</value>
            <value>&quot;Dean percer&quot;</value>
            <value>&quot;Deanra Eno&quot;</value>
            <value>&quot;Debra Catini&quot;</value>
            <value>&quot;Delfina Latchford&quot;</value>
            <value>&quot;Denise Leinenbach&quot;</value>
            <value>&quot;Denise Monton&quot;</value>
            <value>&quot;Dennis Pardue&quot;</value>
            <value>&quot;Denny Blanton&quot;</value>
            <value>&quot;Denny Joy&quot;</value>
            <value>&quot;Dianna Vittorini&quot;</value>
            <value>&quot;Dianna Wilson&quot;</value>
            <value>&quot;Doug Jacobs&quot;</value>
            <value>&quot;Duane Benoit&quot;</value>
            <value>&quot;Ed Braxton&quot;</value>
            <value>&quot;Edward Becker&quot;</value>
            <value>&quot;Eleni McCrary&quot;</value>
            <value>&quot;Ellis Ballard&quot;</value>
            <value>&quot;Elpida Rittenbach&quot;</value>
            <value>&quot;Emily Burns&quot;</value>
            <value>&quot;Erica Hackney&quot;</value>
            <value>&quot;Eugene Moren&quot;</value>
            <value>&quot;Evan Bailliet&quot;</value>
            <value>&quot;Frank Preis&quot;</value>
            <value>&quot;Fred Chung&quot;</value>
            <value>&quot;Fred Wasserman&quot;</value>
            <value>&quot;Gary Hwang&quot;</value>
            <value>&quot;Gene Hale&quot;</value>
            <value>&quot;Gene McClure&quot;</value>
            <value>&quot;Georgia Rosenberg&quot;</value>
            <value>&quot;Greg Matthias&quot;</value>
            <value>&quot;Guy Armstrong&quot;</value>
            <value>&quot;Guy Thornton&quot;</value>
            <value>&quot;Harold Engle&quot;</value>
            <value>&quot;Heather Jas&quot;</value>
            <value>&quot;Helen Abelman&quot;</value>
            <value>&quot;Ionia McGrath&quot;</value>
            <value>&quot;Jack Lebron&quot;</value>
            <value>&quot;James Lanier&quot;</value>
            <value>&quot;Jamie Frazer&quot;</value>
            <value>&quot;Jamie Kunitz&quot;</value>
            <value>&quot;Janet Martin&quot;</value>
            <value>&quot;Jasper Cacioppo&quot;</value>
            <value>&quot;Jay Fein&quot;</value>
            <value>&quot;Jennifer Ferguson&quot;</value>
            <value>&quot;Jennifer Patt&quot;</value>
            <value>&quot;Jeremy Ellison&quot;</value>
            <value>&quot;Jessica Myrick&quot;</value>
            <value>&quot;Jim Karlsson&quot;</value>
            <value>&quot;Jim Mitchum&quot;</value>
            <value>&quot;Jim Radford&quot;</value>
            <value>&quot;John Dryer&quot;</value>
            <value>&quot;John Huston&quot;</value>
            <value>&quot;John Lucas&quot;</value>
            <value>&quot;Jonathan Howell&quot;</value>
            <value>&quot;Joni Sundaresam&quot;</value>
            <value>&quot;Joy Daniels&quot;</value>
            <value>&quot;Joy Smith&quot;</value>
            <value>&quot;Julia Barnett&quot;</value>
            <value>&quot;Julie Prescott&quot;</value>
            <value>&quot;Justin Hirsh&quot;</value>
            <value>&quot;Justin Ritter&quot;</value>
            <value>&quot;Karen Bern&quot;</value>
            <value>&quot;Katharine Harms&quot;</value>
            <value>&quot;Katherine Hughes&quot;</value>
            <value>&quot;Katherine Murray&quot;</value>
            <value>&quot;Katrina Willman&quot;</value>
            <value>&quot;Keith Herrera&quot;</value>
            <value>&quot;Ken Dana&quot;</value>
            <value>&quot;Ken Heidel&quot;</value>
            <value>&quot;Ken Lonsdale&quot;</value>
            <value>&quot;Khloe Miller&quot;</value>
            <value>&quot;Kristina Nunn&quot;</value>
            <value>&quot;Kunst Miller&quot;</value>
            <value>&quot;Larry Hughes&quot;</value>
            <value>&quot;Lela Donovan&quot;</value>
            <value>&quot;Lena Hernandez&quot;</value>
            <value>&quot;Lindsay Shagiari&quot;</value>
            <value>&quot;Lindsay Williams&quot;</value>
            <value>&quot;Lisa DeCherney&quot;</value>
            <value>&quot;Liz Carlisle&quot;</value>
            <value>&quot;Liz MacKendrick&quot;</value>
            <value>&quot;Liz Preis&quot;</value>
            <value>&quot;Logan Currie&quot;</value>
            <value>&quot;Lori Olson&quot;</value>
            <value>&quot;Luke Foster&quot;</value>
            <value>&quot;Lynn Smith&quot;</value>
            <value>&quot;Marc Harrigan&quot;</value>
            <value>&quot;Maribeth Schnelling&quot;</value>
            <value>&quot;Mark Packer&quot;</value>
            <value>&quot;Mary O&apos;Rourke&quot;</value>
            <value>&quot;Mary Zewe&quot;</value>
            <value>&quot;MaryBeth Skach&quot;</value>
            <value>&quot;Mathew Reese&quot;</value>
            <value>&quot;Matt Abelman&quot;</value>
            <value>&quot;Matt Collins&quot;</value>
            <value>&quot;Matt Collister&quot;</value>
            <value>&quot;Maureen Gnade&quot;</value>
            <value>&quot;Maurice Satty&quot;</value>
            <value>&quot;Max Engle&quot;</value>
            <value>&quot;Meg O&apos;Connel&quot;</value>
            <value>&quot;Melanie Seite&quot;</value>
            <value>&quot;Michael Chen&quot;</value>
            <value>&quot;Michael Dominguez&quot;</value>
            <value>&quot;Michael Kennedy&quot;</value>
            <value>&quot;Michael Moore&quot;</value>
            <value>&quot;Michelle Ellison&quot;</value>
            <value>&quot;Michelle Huthwaite&quot;</value>
            <value>&quot;Mick Crebagga&quot;</value>
            <value>&quot;Mike Vittorini&quot;</value>
            <value>&quot;Mitch Gastineau&quot;</value>
            <value>&quot;Muhammed Lee&quot;</value>
            <value>&quot;Muhammed MacIntyre&quot;</value>
            <value>&quot;Nat Carroll&quot;</value>
            <value>&quot;Nat Gilpin&quot;</value>
            <value>&quot;Natalie Webber&quot;</value>
            <value>&quot;Nathan Gelder&quot;</value>
            <value>&quot;Neil Französisch&quot;</value>
            <value>&quot;Neola Schneider&quot;</value>
            <value>&quot;Nick Radford&quot;</value>
            <value>&quot;Nick Zandusky&quot;</value>
            <value>&quot;Nicole Fjeld&quot;</value>
            <value>&quot;Nicole Hansen&quot;</value>
            <value>&quot;Noah Childs&quot;</value>
            <value>&quot;Noel Staavos&quot;</value>
            <value>&quot;Nona Balk&quot;</value>
            <value>&quot;Nora Paige&quot;</value>
            <value>&quot;Nora Pelletier&quot;</value>
            <value>&quot;Pamela Coakley&quot;</value>
            <value>&quot;Patrick Gardner&quot;</value>
            <value>&quot;Paul Stevenson&quot;</value>
            <value>&quot;Paul Van Hugh&quot;</value>
            <value>&quot;Pauline Chand&quot;</value>
            <value>&quot;Pauline Johnson&quot;</value>
            <value>&quot;Pauline Webber&quot;</value>
            <value>&quot;Peter Bühler&quot;</value>
            <value>&quot;Philisse Overcash&quot;</value>
            <value>&quot;Phillina Ober&quot;</value>
            <value>&quot;Phillip Flathmann&quot;</value>
            <value>&quot;Quincy Jones&quot;</value>
            <value>&quot;Ralph Arnett&quot;</value>
            <value>&quot;Ralph Kennedy&quot;</value>
            <value>&quot;Ralph Ritter&quot;</value>
            <value>&quot;Raymond Buch&quot;</value>
            <value>&quot;Ricardo Emerson&quot;</value>
            <value>&quot;Ricardo Sperren&quot;</value>
            <value>&quot;Rick Duston&quot;</value>
            <value>&quot;Rick Reed&quot;</value>
            <value>&quot;Rick Wilson&quot;</value>
            <value>&quot;Rob Haberlin&quot;</value>
            <value>&quot;Roger Barcio&quot;</value>
            <value>&quot;Roger Demir&quot;</value>
            <value>&quot;Roland Schwarz&quot;</value>
            <value>&quot;Ross Baird&quot;</value>
            <value>&quot;Ross DeVincentis&quot;</value>
            <value>&quot;Roy Collins&quot;</value>
            <value>&quot;Roy Französisch&quot;</value>
            <value>&quot;Roy Skaria&quot;</value>
            <value>&quot;Ruben Ausman&quot;</value>
            <value>&quot;Ruben Dartt&quot;</value>
            <value>&quot;Russell Applegate&quot;</value>
            <value>&quot;Ryan Crowe&quot;</value>
            <value>&quot;Sally Knutson&quot;</value>
            <value>&quot;Sally Matthias&quot;</value>
            <value>&quot;Sam Craven&quot;</value>
            <value>&quot;Sanjit Engle&quot;</value>
            <value>&quot;Scot Wooten&quot;</value>
            <value>&quot;Sean O&apos;Donnell&quot;</value>
            <value>&quot;Seth Vernon&quot;</value>
            <value>&quot;Shahid Shariari&quot;</value>
            <value>&quot;Sharelle Roach&quot;</value>
            <value>&quot;Stefanie Holloman&quot;</value>
            <value>&quot;Stephanie Phelps&quot;</value>
            <value>&quot;Steve Chapman&quot;</value>
            <value>&quot;Steven Cartwright&quot;</value>
            <value>&quot;Steven Roelle&quot;</value>
            <value>&quot;Stewart Carmichael&quot;</value>
            <value>&quot;Stuart Calhoun&quot;</value>
            <value>&quot;Stuart Van&quot;</value>
            <value>&quot;Sung Shariari&quot;</value>
            <value>&quot;Susan Gilcrest&quot;</value>
            <value>&quot;Susan Pistek&quot;</value>
            <value>&quot;Sylvia Foulston&quot;</value>
            <value>&quot;Tamara Chand&quot;</value>
            <value>&quot;Tamara Manning&quot;</value>
            <value>&quot;Tamara Willingham&quot;</value>
            <value>&quot;Ted Trevino&quot;</value>
            <value>&quot;Thais Sissman&quot;</value>
            <value>&quot;Thea Hendricks&quot;</value>
            <value>&quot;Thea Hudgings&quot;</value>
            <value>&quot;Thomas Brumley&quot;</value>
            <value>&quot;Thomas Seio&quot;</value>
            <value>&quot;Thomas Thornton&quot;</value>
            <value>&quot;Tiffany House&quot;</value>
            <value>&quot;Tim Brockman&quot;</value>
            <value>&quot;Tim Taslimi&quot;</value>
            <value>&quot;Toby Gnade&quot;</value>
            <value>&quot;Toby Ritter&quot;</value>
            <value>&quot;Toby Swindell&quot;</value>
            <value>&quot;Tonja Turnell&quot;</value>
            <value>&quot;Tony Chapman&quot;</value>
            <value>&quot;Tony Molinari&quot;</value>
            <value>&quot;Tracy Collins&quot;</value>
            <value>&quot;Tracy Poddar&quot;</value>
            <value>&quot;Tracy Zic&quot;</value>
            <value>&quot;Trudy Schmidt&quot;</value>
            <value>&quot;Vicky Freymann&quot;</value>
            <value>&quot;Victoria Brennan&quot;</value>
            <value>&quot;Vivek Gonzalez&quot;</value>
            <value>&quot;Vivek Grady&quot;</value>
            <value>&quot;Yana Sorensen&quot;</value>
            <value>&quot;Zuschuss Carroll&quot;</value>
            <value>&quot;Zuschuss Donatelli&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;2 Time Return&quot;'>
            <value>&quot;Aaron Smayling&quot;</value>
            <value>&quot;Adam Shillingsburg&quot;</value>
            <value>&quot;Adrian Hane&quot;</value>
            <value>&quot;Alice McCarthy&quot;</value>
            <value>&quot;Allen Rosenblatt&quot;</value>
            <value>&quot;Alyssa Tate&quot;</value>
            <value>&quot;Amy Hunt&quot;</value>
            <value>&quot;Angele Hood&quot;</value>
            <value>&quot;Anthony Garverick&quot;</value>
            <value>&quot;Anthony Jacobs&quot;</value>
            <value>&quot;Anthony O&apos;Donnell&quot;</value>
            <value>&quot;Arianne Irving&quot;</value>
            <value>&quot;Arthur Prichep&quot;</value>
            <value>&quot;Astrea Jones&quot;</value>
            <value>&quot;Barry Blumstein&quot;</value>
            <value>&quot;Becky Castell&quot;</value>
            <value>&quot;Becky Martin&quot;</value>
            <value>&quot;Benjamin Patterson&quot;</value>
            <value>&quot;Bill Shonely&quot;</value>
            <value>&quot;Bradley Nguyen&quot;</value>
            <value>&quot;Bradley Talbott&quot;</value>
            <value>&quot;Brenda Bowman&quot;</value>
            <value>&quot;Brian Moss&quot;</value>
            <value>&quot;Brian Thompson&quot;</value>
            <value>&quot;Brooke Gillingham&quot;</value>
            <value>&quot;Candace McMahon&quot;</value>
            <value>&quot;Carl Jackson&quot;</value>
            <value>&quot;Carl Ludwig&quot;</value>
            <value>&quot;Carlos Daly&quot;</value>
            <value>&quot;Carol Darley&quot;</value>
            <value>&quot;Caroline Jumper&quot;</value>
            <value>&quot;Cassandra Brandow&quot;</value>
            <value>&quot;Cathy Armstrong&quot;</value>
            <value>&quot;Chad McGuire&quot;</value>
            <value>&quot;Chris McAfee&quot;</value>
            <value>&quot;Christina Anderson&quot;</value>
            <value>&quot;Christine Abelman&quot;</value>
            <value>&quot;Christine Phan&quot;</value>
            <value>&quot;Chuck Magee&quot;</value>
            <value>&quot;Chuck Sachs&quot;</value>
            <value>&quot;Cindy Chapman&quot;</value>
            <value>&quot;Clay Ludtke&quot;</value>
            <value>&quot;Craig Carroll&quot;</value>
            <value>&quot;Craig Leslie&quot;</value>
            <value>&quot;Craig Reiter&quot;</value>
            <value>&quot;Craig Yedwab&quot;</value>
            <value>&quot;Cynthia Delaney&quot;</value>
            <value>&quot;Cynthia Voltz&quot;</value>
            <value>&quot;Cyra Reiten&quot;</value>
            <value>&quot;Dan Reichenbach&quot;</value>
            <value>&quot;Dario Medina&quot;</value>
            <value>&quot;Darren Budd&quot;</value>
            <value>&quot;Dave Kipp&quot;</value>
            <value>&quot;David Bremer&quot;</value>
            <value>&quot;David Wiener&quot;</value>
            <value>&quot;Deborah Brumfield&quot;</value>
            <value>&quot;Deirdre Greer&quot;</value>
            <value>&quot;Dennis Bolton&quot;</value>
            <value>&quot;Dennis Kane&quot;</value>
            <value>&quot;Don Jones&quot;</value>
            <value>&quot;Dorothy Badders&quot;</value>
            <value>&quot;Dorothy Wardle&quot;</value>
            <value>&quot;Dorris liebe&quot;</value>
            <value>&quot;Ed Ludwig&quot;</value>
            <value>&quot;Edward Nazzal&quot;</value>
            <value>&quot;Eileen Kiefer&quot;</value>
            <value>&quot;Emily Grady&quot;</value>
            <value>&quot;Eric Barreto&quot;</value>
            <value>&quot;Eric Murdock&quot;</value>
            <value>&quot;Erin Creighton&quot;</value>
            <value>&quot;Evan Henry&quot;</value>
            <value>&quot;Frank Atkinson&quot;</value>
            <value>&quot;Frank Gastineau&quot;</value>
            <value>&quot;Fred Hopkins&quot;</value>
            <value>&quot;Gary McGarr&quot;</value>
            <value>&quot;Gary Zandusky&quot;</value>
            <value>&quot;Giulietta Dortch&quot;</value>
            <value>&quot;Giulietta Weimer&quot;</value>
            <value>&quot;Harold Dahlen&quot;</value>
            <value>&quot;Henry Goldwyn&quot;</value>
            <value>&quot;Henry MacAllister&quot;</value>
            <value>&quot;Herbert Flentye&quot;</value>
            <value>&quot;Hunter Glantz&quot;</value>
            <value>&quot;Irene Maddox&quot;</value>
            <value>&quot;Ivan Gibson&quot;</value>
            <value>&quot;Jack Garza&quot;</value>
            <value>&quot;Janet Molinari&quot;</value>
            <value>&quot;Jason Fortune-&quot;</value>
            <value>&quot;Jason Gross&quot;</value>
            <value>&quot;Jennifer Halladay&quot;</value>
            <value>&quot;Jeremy Farry&quot;</value>
            <value>&quot;Jill Fjeld&quot;</value>
            <value>&quot;Jim Epp&quot;</value>
            <value>&quot;Joni Wasserman&quot;</value>
            <value>&quot;Joseph Airdo&quot;</value>
            <value>&quot;Joy Bell-&quot;</value>
            <value>&quot;Julia Dunbar&quot;</value>
            <value>&quot;Julia West&quot;</value>
            <value>&quot;Julie Kriz&quot;</value>
            <value>&quot;Justin Deggeller&quot;</value>
            <value>&quot;Karen Carlisle&quot;</value>
            <value>&quot;Keith Dawkins&quot;</value>
            <value>&quot;Kelly Lampkin&quot;</value>
            <value>&quot;Ken Brennan&quot;</value>
            <value>&quot;Kimberly Carter&quot;</value>
            <value>&quot;Larry Tron&quot;</value>
            <value>&quot;Laurel Elliston&quot;</value>
            <value>&quot;Lena Cacioppo&quot;</value>
            <value>&quot;Lena Creighton&quot;</value>
            <value>&quot;Linda Southworth&quot;</value>
            <value>&quot;Liz Pelletier&quot;</value>
            <value>&quot;Luke Schmidt&quot;</value>
            <value>&quot;Lycoris Saunders&quot;</value>
            <value>&quot;Magdelene Morse&quot;</value>
            <value>&quot;Marc Crier&quot;</value>
            <value>&quot;Maria Etezadi&quot;</value>
            <value>&quot;Marina Lichtenstein&quot;</value>
            <value>&quot;Maris LaWare&quot;</value>
            <value>&quot;Mark Haberlin&quot;</value>
            <value>&quot;Mark Hamilton&quot;</value>
            <value>&quot;Mark Van Huff&quot;</value>
            <value>&quot;Matt Connell&quot;</value>
            <value>&quot;Maureen Gastineau&quot;</value>
            <value>&quot;Max Jones&quot;</value>
            <value>&quot;Michael Granlund&quot;</value>
            <value>&quot;Michael Nguyen&quot;</value>
            <value>&quot;Michael Paige&quot;</value>
            <value>&quot;Michael Stewart&quot;</value>
            <value>&quot;Michelle Moray&quot;</value>
            <value>&quot;Mike Pelletier&quot;</value>
            <value>&quot;Mitch Webber&quot;</value>
            <value>&quot;Natalie Fritzler&quot;</value>
            <value>&quot;Neil Knudson&quot;</value>
            <value>&quot;Nick Crebassa&quot;</value>
            <value>&quot;Nicole Brennan&quot;</value>
            <value>&quot;Olvera Toch&quot;</value>
            <value>&quot;Pamela Stobb&quot;</value>
            <value>&quot;Parhena Norris&quot;</value>
            <value>&quot;Patrick Bzostek&quot;</value>
            <value>&quot;Patrick O&apos;Donnell&quot;</value>
            <value>&quot;Pete Kriz&quot;</value>
            <value>&quot;Pete Takahito&quot;</value>
            <value>&quot;Peter Fuller&quot;</value>
            <value>&quot;Phillip Breyer&quot;</value>
            <value>&quot;Rachel Payne&quot;</value>
            <value>&quot;Randy Bradley&quot;</value>
            <value>&quot;Raymond Messe&quot;</value>
            <value>&quot;Richard Bierner&quot;</value>
            <value>&quot;Ritsa Hightower&quot;</value>
            <value>&quot;Rob Beeghly&quot;</value>
            <value>&quot;Rob Williams&quot;</value>
            <value>&quot;Robert Barroso&quot;</value>
            <value>&quot;Sally Hughsby&quot;</value>
            <value>&quot;Sample Company A&quot;</value>
            <value>&quot;Sandra Glassco&quot;</value>
            <value>&quot;Sanjit Chand&quot;</value>
            <value>&quot;Sara Luxemburg&quot;</value>
            <value>&quot;Sarah Brown&quot;</value>
            <value>&quot;Scot Coram&quot;</value>
            <value>&quot;Sean Wendt&quot;</value>
            <value>&quot;Shirley Daniels&quot;</value>
            <value>&quot;Shirley Schmidt&quot;</value>
            <value>&quot;Shui Tom&quot;</value>
            <value>&quot;Skye Norling&quot;</value>
            <value>&quot;Speros Goranitis&quot;</value>
            <value>&quot;Steve Carroll&quot;</value>
            <value>&quot;Steven Ward&quot;</value>
            <value>&quot;Stewart Visinsky&quot;</value>
            <value>&quot;Sue Ann Reed&quot;</value>
            <value>&quot;Sung Chung&quot;</value>
            <value>&quot;Susan Vittorini&quot;</value>
            <value>&quot;Suzanne McNair&quot;</value>
            <value>&quot;Tamara Dahlen&quot;</value>
            <value>&quot;Tom Prescott&quot;</value>
            <value>&quot;Tony Sayre&quot;</value>
            <value>&quot;Tracy Blumstein&quot;</value>
            <value>&quot;Trudy Glocke&quot;</value>
            <value>&quot;Valerie Dominguez&quot;</value>
            <value>&quot;Victor Preis&quot;</value>
            <value>&quot;Victoria Wilson&quot;</value>
            <value>&quot;Vivian Mathis&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;3 Time Return&quot;'>
            <value>&quot;Alan Barnes&quot;</value>
            <value>&quot;Alejandro Ballentine&quot;</value>
            <value>&quot;Andy Gerbode&quot;</value>
            <value>&quot;Ann Blume&quot;</value>
            <value>&quot;Anna Gayman&quot;</value>
            <value>&quot;Anna Häberlin&quot;</value>
            <value>&quot;Anthony Witt&quot;</value>
            <value>&quot;Bart Pistole&quot;</value>
            <value>&quot;Ben Ferrer&quot;</value>
            <value>&quot;Bobby Elias&quot;</value>
            <value>&quot;Brendan Murry&quot;</value>
            <value>&quot;Bruce Degenhardt&quot;</value>
            <value>&quot;Bryan Mills&quot;</value>
            <value>&quot;Catherine Glotzbach&quot;</value>
            <value>&quot;Christine Sundaresam&quot;</value>
            <value>&quot;Dean Braden&quot;</value>
            <value>&quot;Dianna Arnett&quot;</value>
            <value>&quot;Ed Jacobs&quot;</value>
            <value>&quot;Elizabeth Moffitt&quot;</value>
            <value>&quot;Emily Phan&quot;</value>
            <value>&quot;Eric Hoffmann&quot;</value>
            <value>&quot;Erica Bern&quot;</value>
            <value>&quot;Erin Smith&quot;</value>
            <value>&quot;Eva Jacobs&quot;</value>
            <value>&quot;Frank Olsen&quot;</value>
            <value>&quot;George Bell&quot;</value>
            <value>&quot;George Zrebassa&quot;</value>
            <value>&quot;Grace Kelly&quot;</value>
            <value>&quot;Greg Guthrie&quot;</value>
            <value>&quot;Harold Pawlan&quot;</value>
            <value>&quot;Harry Greene&quot;</value>
            <value>&quot;Harry Marie&quot;</value>
            <value>&quot;James Galang&quot;</value>
            <value>&quot;Jane Waco&quot;</value>
            <value>&quot;Jenna Caffey&quot;</value>
            <value>&quot;Jim Kriz&quot;</value>
            <value>&quot;Jocasta Rupert&quot;</value>
            <value>&quot;Jonathan Doherty&quot;</value>
            <value>&quot;Joseph Holt&quot;</value>
            <value>&quot;Juliana Krohn&quot;</value>
            <value>&quot;Katherine Ducich&quot;</value>
            <value>&quot;Katherine Nockton&quot;</value>
            <value>&quot;Kean Takahito&quot;</value>
            <value>&quot;Kelly Andreada&quot;</value>
            <value>&quot;Laura Armstrong&quot;</value>
            <value>&quot;Laurel Beltran&quot;</value>
            <value>&quot;Lena Radford&quot;</value>
            <value>&quot;Liz Thompson&quot;</value>
            <value>&quot;Logan Haushalter&quot;</value>
            <value>&quot;Luke Weiss&quot;</value>
            <value>&quot;Maribeth Yedwab&quot;</value>
            <value>&quot;Mark Cousins&quot;</value>
            <value>&quot;Maureen Fritzler&quot;</value>
            <value>&quot;Max Ludwig&quot;</value>
            <value>&quot;Michael Oakman&quot;</value>
            <value>&quot;Michelle Arnett&quot;</value>
            <value>&quot;Mick Hernandez&quot;</value>
            <value>&quot;Mike Gockenbach&quot;</value>
            <value>&quot;Muhammed Yedwab&quot;</value>
            <value>&quot;Natalie DeCherney&quot;</value>
            <value>&quot;Nathan Mautz&quot;</value>
            <value>&quot;Odella Nelson&quot;</value>
            <value>&quot;Paul Knutson&quot;</value>
            <value>&quot;Paul MacIntyre&quot;</value>
            <value>&quot;Penelope Sewall&quot;</value>
            <value>&quot;Philip Brown&quot;</value>
            <value>&quot;Philip Fox&quot;</value>
            <value>&quot;Rick Hansen&quot;</value>
            <value>&quot;Rob Dowd&quot;</value>
            <value>&quot;Rob Lucas&quot;</value>
            <value>&quot;Roland Murray&quot;</value>
            <value>&quot;Russell D&apos;Ascenzo&quot;</value>
            <value>&quot;Sam Zeldin&quot;</value>
            <value>&quot;Sanjit Jacobs&quot;</value>
            <value>&quot;Sarah Foster&quot;</value>
            <value>&quot;Scott Williamson&quot;</value>
            <value>&quot;Sean Christensen&quot;</value>
            <value>&quot;Shahid Collister&quot;</value>
            <value>&quot;Shahid Hopkins&quot;</value>
            <value>&quot;Sonia Cooley&quot;</value>
            <value>&quot;Sung Pak&quot;</value>
            <value>&quot;Theresa Coyne&quot;</value>
            <value>&quot;Toby Carlisle&quot;</value>
            <value>&quot;Tom Boeckenhauer&quot;</value>
            <value>&quot;Tom Zandusky&quot;</value>
            <value>&quot;William Brown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;4 Time Return&quot;'>
            <value>&quot;Alejandro Savely&quot;</value>
            <value>&quot;Anna Andreadi&quot;</value>
            <value>&quot;Ashley Jarboe&quot;</value>
            <value>&quot;Brendan Sweed&quot;</value>
            <value>&quot;Cari Schnelling&quot;</value>
            <value>&quot;Carl Weiss&quot;</value>
            <value>&quot;Dana Kaydos&quot;</value>
            <value>&quot;Darren Koutras&quot;</value>
            <value>&quot;Darrin Van Huff&quot;</value>
            <value>&quot;David Philippe&quot;</value>
            <value>&quot;Doug O&apos;Connell&quot;</value>
            <value>&quot;Edward Hooks&quot;</value>
            <value>&quot;Erica Smith&quot;</value>
            <value>&quot;Eugene Barchas&quot;</value>
            <value>&quot;Joel Eaton&quot;</value>
            <value>&quot;John Castell&quot;</value>
            <value>&quot;Julie Creighton&quot;</value>
            <value>&quot;Karl Braun&quot;</value>
            <value>&quot;Kristen Hastings&quot;</value>
            <value>&quot;Lauren Leatherbury&quot;</value>
            <value>&quot;Mick Brown&quot;</value>
            <value>&quot;Patrick O&apos;Brill&quot;</value>
            <value>&quot;Rick Huthwaite&quot;</value>
            <value>&quot;Ryan Akin&quot;</value>
            <value>&quot;Sarah Jordon&quot;</value>
            <value>&quot;Scott Cohen&quot;</value>
            <value>&quot;Sonia Sunley&quot;</value>
            <value>&quot;Theresa Swint&quot;</value>
            <value>&quot;Toby Braunhardt&quot;</value>
            <value>&quot;Trudy Brown&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;5 Time Return&quot;'>
            <value>&quot;Daniel Lacy&quot;</value>
            <value>&quot;Darrin Martin&quot;</value>
            <value>&quot;Eugene Hildebrand&quot;</value>
            <value>&quot;Gary Mitchum&quot;</value>
            <value>&quot;Greg Tran&quot;</value>
            <value>&quot;Jeremy Pistek&quot;</value>
            <value>&quot;Patrick Ryan&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;6 Time Return&quot;'>
            <value>&quot;Andrew Gjertsen&quot;</value>
            <value>&quot;Anne McFarland&quot;</value>
            <value>&quot;Brian DeCherney&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Discount (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Discount]' new-bin='true'>
          <bin default-name='false' value='&quot;MaxD&quot;'>
            <value>0.40000000000000002</value>
            <value>0.40200000000000002</value>
            <value>0.44999999999999996</value>
            <value>0.45000000000000001</value>
            <value>0.47000000000000003</value>
            <value>0.5</value>
            <value>0.55000000000000004</value>
            <value>0.57000000000000006</value>
            <value>0.59999999999999998</value>
            <value>0.60199999999999998</value>
            <value>0.65000000000000002</value>
            <value>0.69999999999999996</value>
            <value>0.80000000000000004</value>
            <value>0.84999999999999998</value>
          </bin>
          <bin default-name='false' value='&quot;MinD&quot;'>
            <value>0.0</value>
            <value>0.002</value>
            <value>0.070000000000000007</value>
            <value>0.10000000000000001</value>
            <value>0.14999999999999999</value>
            <value>0.15000000000000002</value>
            <value>0.17000000000000001</value>
            <value>0.20000000000000001</value>
            <value>0.20200000000000001</value>
            <value>0.25</value>
            <value>0.27000000000000002</value>
            <value>0.29999999999999999</value>
            <value>0.32000000000000001</value>
            <value>0.34999999999999998</value>
            <value>0.37</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Market]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='string' name='[Returned (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Returned]' new-bin='true' />
      </column>
      <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='ORDERS' datatype='table' name='[__tableau_internal_object_id__].[ORDERS_FDB8681D5E20468D8D48039E76303022]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='PEOPLE' datatype='table' name='[__tableau_internal_object_id__].[PEOPLE_171C112C88F8412ABC24636DF184EBD7]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='RETURNS' datatype='table' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
      <column-instance column='[Market]' derivation='Max' name='[max:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1640436172483256326]' derivation='None' name='[none:Calculation_1640436172483256326:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1640436172493524999]' derivation='None' name='[none:Calculation_1640436172493524999:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group name='[Customer Name &amp; Product ID (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Product ID]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Country,Region,YEAR(Order Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:Region:nk]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (Region,YEAR(Order Date))]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Region:nk]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Product ID Set' name='[Product ID Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Product ID]' member='&quot;FUR-CH-4654&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-3494&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-3499&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-3527&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-3545&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-5921&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-5923&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-6117&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-AR-6120&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-2894&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-2917&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3189&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3249&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3293&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3724&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3726&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-3737&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-4807&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-4816&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-4828&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-6370&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-BI-6402&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-FA-3044&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-FA-6129&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-FA-6184&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-FA-6189&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-FA-6205&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-ST-4057&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-ST-4260&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-ST-5693&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-ST-6033&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;OFF-ST-6248&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;TEC-PH-3148&quot;' />
          <groupfilter function='member' level='[Product ID]' member='&quot;TEC-PH-5355&quot;' />
        </groupfilter>
      </group>
      <group name='[Region &amp; Ship Mode (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group name='[Region &amp; State (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='YEAR(Order Date) Set' name='[YEAR(Order Date) Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Customer Name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;6 Time Return&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2 Time Return&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;3 Time Return&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;0 Time Return&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;4 Time Return&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;1 Time Return&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;5 Time Return&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1640436172483256326:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Y&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;N&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Discount (group)]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;MinD&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;MaxD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1640436172493524999:nk]' type='palette'>
            <map to='#76b7b2'>
              <bucket>&quot;N&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Y&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Market:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USCA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;LATAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia Pacific&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Market:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;USCA&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;LATAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia Pacific&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Order Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2012</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2015</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2014</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2013</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Calculation_1640436172460761091' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Calculation_1640436172461154308' />
        <field-sort-custom-order field='Calculation_1640436172493524999' />
        <field-sort-custom-order field='Calculation_1640436172483256326' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ORDERS' id='ORDERS_FDB8681D5E20468D8D48039E76303022'>
            <properties context=''>
              <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='ORDERS' table='[ORDERS$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X2147483647:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='Order Date' ordinal='2' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='PEOPLE' id='PEOPLE_171C112C88F8412ABC24636DF184EBD7'>
            <properties context=''>
              <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='PEOPLE' table='[PEOPLE$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='RETURNS' id='RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A'>
            <properties context=''>
              <relation connection='excel-direct.170av240et761518lvohm1gjdfe2' name='RETURNS' table='[RETURNS$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (PEOPLE)]' />
            </expression>
            <first-end-point object-id='ORDERS_FDB8681D5E20468D8D48039E76303022' />
            <second-end-point object-id='PEOPLE_171C112C88F8412ABC24636DF184EBD7' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (RETURNS)]' />
            </expression>
            <first-end-point object-id='ORDERS_FDB8681D5E20468D8D48039E76303022' />
            <second-end-point object-id='RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='CASE_1_T1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1640436172460761091]' derivation='Avg' name='[avg:Calculation_1640436172460761091:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[avg:Calculation_1640436172460761091:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[avg:Calculation_1640436172460761091:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{71F3E3D7-3EA2-46A5-8E68-C2F51BFEAC12}' />
    </worksheet>
    <worksheet name='CASE_1_T2'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1640436172460761091]' derivation='Avg' name='[avg:Calculation_1640436172460761091:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[avg:Calculation_1640436172460761091:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[avg:Calculation_1640436172460761091:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[avg:Calculation_1640436172460761091:qk]</rows>
        <cols>([federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk] / [federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk])</cols>
      </table>
      <simple-id uuid='{44DA0D13-A6C3-4793-8475-43544D69E31E}' />
    </worksheet>
    <worksheet name='CASE_1_T3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
            </column>
            <column caption='ShipModeDayRequired' datatype='integer' name='[Calculation_1640436172461154308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Ship Mode]==&apos;Same Day&apos;,0,IIF([Ship Mode]==&apos;first class&apos;,2,IIf([Ship Mode]==&apos;second class&apos;,3,5)))' />
            </column>
            <column caption='DelayDelivery ' datatype='string' name='[Calculation_1640436172483256326]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIf([Calculation_1640436172460761091]-[Calculation_1640436172461154308]&gt;0,&apos;Y&apos;,&apos;N&apos;)' />
            </column>
            <column caption='CustomerReturnCount' datatype='string' name='[Customer Name (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer Name]' default='&quot;0 Time Return&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;1 Time Return&quot;'>
                  <value>&quot;Aaron Bergman&quot;</value>
                  <value>&quot;Aaron Hawkins&quot;</value>
                  <value>&quot;Adrian Barton&quot;</value>
                  <value>&quot;Aimee Bixby&quot;</value>
                  <value>&quot;Alan Dominguez&quot;</value>
                  <value>&quot;Alan Haines&quot;</value>
                  <value>&quot;Alan Schoenberger&quot;</value>
                  <value>&quot;Alan Shonely&quot;</value>
                  <value>&quot;Alex Avila&quot;</value>
                  <value>&quot;Alex Russell&quot;</value>
                  <value>&quot;Allen Goldenen&quot;</value>
                  <value>&quot;Andrew Roberts&quot;</value>
                  <value>&quot;Andy Yotov&quot;</value>
                  <value>&quot;Anemone Ratner&quot;</value>
                  <value>&quot;Ann Chong&quot;</value>
                  <value>&quot;Anna Chung&quot;</value>
                  <value>&quot;Annie Thurman&quot;</value>
                  <value>&quot;Annie Zypern&quot;</value>
                  <value>&quot;Anthony Rawles&quot;</value>
                  <value>&quot;Art Ferguson&quot;</value>
                  <value>&quot;Arthur Gainer&quot;</value>
                  <value>&quot;Arthur Wiediger&quot;</value>
                  <value>&quot;Barry Franz&quot;</value>
                  <value>&quot;Barry Französisch&quot;</value>
                  <value>&quot;Barry Gonzalez&quot;</value>
                  <value>&quot;Barry Pond&quot;</value>
                  <value>&quot;Barry Weirich&quot;</value>
                  <value>&quot;Ben Peterman&quot;</value>
                  <value>&quot;Ben Wallace&quot;</value>
                  <value>&quot;Berenike Kampe&quot;</value>
                  <value>&quot;Beth Fritzler&quot;</value>
                  <value>&quot;Beth Thompson&quot;</value>
                  <value>&quot;Bill Donatelli&quot;</value>
                  <value>&quot;Bill Eplett&quot;</value>
                  <value>&quot;Bill Tyler&quot;</value>
                  <value>&quot;Brad Eason&quot;</value>
                  <value>&quot;Brad Norvell&quot;</value>
                  <value>&quot;Bradley Drucker&quot;</value>
                  <value>&quot;Brian Dahlen&quot;</value>
                  <value>&quot;Brian Derr&quot;</value>
                  <value>&quot;Brian Stugart&quot;</value>
                  <value>&quot;Brosina Hoffman&quot;</value>
                  <value>&quot;Bruce Geld&quot;</value>
                  <value>&quot;Bruce Stewart&quot;</value>
                  <value>&quot;Bryan Davis&quot;</value>
                  <value>&quot;Cari Sayre&quot;</value>
                  <value>&quot;Carlos Meador&quot;</value>
                  <value>&quot;Carol Adams&quot;</value>
                  <value>&quot;Carol Triggs&quot;</value>
                  <value>&quot;Cathy Prescott&quot;</value>
                  <value>&quot;Chad Cunningham&quot;</value>
                  <value>&quot;Charles McCrossin&quot;</value>
                  <value>&quot;Chloris Kastensmidt&quot;</value>
                  <value>&quot;Chris Selesnick&quot;</value>
                  <value>&quot;Christina DeMoss&quot;</value>
                  <value>&quot;Christina VanderZanden&quot;</value>
                  <value>&quot;Christy Brittain&quot;</value>
                  <value>&quot;Chuck Clark&quot;</value>
                  <value>&quot;Claire Gute&quot;</value>
                  <value>&quot;Clay Cheatham&quot;</value>
                  <value>&quot;Clay Rozendal&quot;</value>
                  <value>&quot;Clytie Kelty&quot;</value>
                  <value>&quot;Corey Catlett&quot;</value>
                  <value>&quot;Corey Roper&quot;</value>
                  <value>&quot;Craig Molinari&quot;</value>
                  <value>&quot;Damala Kotsonis&quot;</value>
                  <value>&quot;Dan Lawera&quot;</value>
                  <value>&quot;Daniel Byrd&quot;</value>
                  <value>&quot;Daniel Raglin&quot;</value>
                  <value>&quot;Darrin Sayre&quot;</value>
                  <value>&quot;Dave Brooks&quot;</value>
                  <value>&quot;Dave Hallsten&quot;</value>
                  <value>&quot;David Flashing&quot;</value>
                  <value>&quot;David Smith&quot;</value>
                  <value>&quot;Dean percer&quot;</value>
                  <value>&quot;Deanra Eno&quot;</value>
                  <value>&quot;Debra Catini&quot;</value>
                  <value>&quot;Delfina Latchford&quot;</value>
                  <value>&quot;Denise Leinenbach&quot;</value>
                  <value>&quot;Denise Monton&quot;</value>
                  <value>&quot;Dennis Pardue&quot;</value>
                  <value>&quot;Denny Blanton&quot;</value>
                  <value>&quot;Denny Joy&quot;</value>
                  <value>&quot;Dianna Vittorini&quot;</value>
                  <value>&quot;Dianna Wilson&quot;</value>
                  <value>&quot;Doug Jacobs&quot;</value>
                  <value>&quot;Duane Benoit&quot;</value>
                  <value>&quot;Ed Braxton&quot;</value>
                  <value>&quot;Edward Becker&quot;</value>
                  <value>&quot;Eleni McCrary&quot;</value>
                  <value>&quot;Ellis Ballard&quot;</value>
                  <value>&quot;Elpida Rittenbach&quot;</value>
                  <value>&quot;Emily Burns&quot;</value>
                  <value>&quot;Erica Hackney&quot;</value>
                  <value>&quot;Eugene Moren&quot;</value>
                  <value>&quot;Evan Bailliet&quot;</value>
                  <value>&quot;Frank Preis&quot;</value>
                  <value>&quot;Fred Chung&quot;</value>
                  <value>&quot;Fred Wasserman&quot;</value>
                  <value>&quot;Gary Hwang&quot;</value>
                  <value>&quot;Gene Hale&quot;</value>
                  <value>&quot;Gene McClure&quot;</value>
                  <value>&quot;Georgia Rosenberg&quot;</value>
                  <value>&quot;Greg Matthias&quot;</value>
                  <value>&quot;Guy Armstrong&quot;</value>
                  <value>&quot;Guy Thornton&quot;</value>
                  <value>&quot;Harold Engle&quot;</value>
                  <value>&quot;Heather Jas&quot;</value>
                  <value>&quot;Helen Abelman&quot;</value>
                  <value>&quot;Ionia McGrath&quot;</value>
                  <value>&quot;Jack Lebron&quot;</value>
                  <value>&quot;James Lanier&quot;</value>
                  <value>&quot;Jamie Frazer&quot;</value>
                  <value>&quot;Jamie Kunitz&quot;</value>
                  <value>&quot;Janet Martin&quot;</value>
                  <value>&quot;Jasper Cacioppo&quot;</value>
                  <value>&quot;Jay Fein&quot;</value>
                  <value>&quot;Jennifer Ferguson&quot;</value>
                  <value>&quot;Jennifer Patt&quot;</value>
                  <value>&quot;Jeremy Ellison&quot;</value>
                  <value>&quot;Jessica Myrick&quot;</value>
                  <value>&quot;Jim Karlsson&quot;</value>
                  <value>&quot;Jim Mitchum&quot;</value>
                  <value>&quot;Jim Radford&quot;</value>
                  <value>&quot;John Dryer&quot;</value>
                  <value>&quot;John Huston&quot;</value>
                  <value>&quot;John Lucas&quot;</value>
                  <value>&quot;Jonathan Howell&quot;</value>
                  <value>&quot;Joni Sundaresam&quot;</value>
                  <value>&quot;Joy Daniels&quot;</value>
                  <value>&quot;Joy Smith&quot;</value>
                  <value>&quot;Julia Barnett&quot;</value>
                  <value>&quot;Julie Prescott&quot;</value>
                  <value>&quot;Justin Hirsh&quot;</value>
                  <value>&quot;Justin Ritter&quot;</value>
                  <value>&quot;Karen Bern&quot;</value>
                  <value>&quot;Katharine Harms&quot;</value>
                  <value>&quot;Katherine Hughes&quot;</value>
                  <value>&quot;Katherine Murray&quot;</value>
                  <value>&quot;Katrina Willman&quot;</value>
                  <value>&quot;Keith Herrera&quot;</value>
                  <value>&quot;Ken Dana&quot;</value>
                  <value>&quot;Ken Heidel&quot;</value>
                  <value>&quot;Ken Lonsdale&quot;</value>
                  <value>&quot;Khloe Miller&quot;</value>
                  <value>&quot;Kristina Nunn&quot;</value>
                  <value>&quot;Kunst Miller&quot;</value>
                  <value>&quot;Larry Hughes&quot;</value>
                  <value>&quot;Lela Donovan&quot;</value>
                  <value>&quot;Lena Hernandez&quot;</value>
                  <value>&quot;Lindsay Shagiari&quot;</value>
                  <value>&quot;Lindsay Williams&quot;</value>
                  <value>&quot;Lisa DeCherney&quot;</value>
                  <value>&quot;Liz Carlisle&quot;</value>
                  <value>&quot;Liz MacKendrick&quot;</value>
                  <value>&quot;Liz Preis&quot;</value>
                  <value>&quot;Logan Currie&quot;</value>
                  <value>&quot;Lori Olson&quot;</value>
                  <value>&quot;Luke Foster&quot;</value>
                  <value>&quot;Lynn Smith&quot;</value>
                  <value>&quot;Marc Harrigan&quot;</value>
                  <value>&quot;Maribeth Schnelling&quot;</value>
                  <value>&quot;Mark Packer&quot;</value>
                  <value>&quot;Mary O&apos;Rourke&quot;</value>
                  <value>&quot;Mary Zewe&quot;</value>
                  <value>&quot;MaryBeth Skach&quot;</value>
                  <value>&quot;Mathew Reese&quot;</value>
                  <value>&quot;Matt Abelman&quot;</value>
                  <value>&quot;Matt Collins&quot;</value>
                  <value>&quot;Matt Collister&quot;</value>
                  <value>&quot;Maureen Gnade&quot;</value>
                  <value>&quot;Maurice Satty&quot;</value>
                  <value>&quot;Max Engle&quot;</value>
                  <value>&quot;Meg O&apos;Connel&quot;</value>
                  <value>&quot;Melanie Seite&quot;</value>
                  <value>&quot;Michael Chen&quot;</value>
                  <value>&quot;Michael Dominguez&quot;</value>
                  <value>&quot;Michael Kennedy&quot;</value>
                  <value>&quot;Michael Moore&quot;</value>
                  <value>&quot;Michelle Ellison&quot;</value>
                  <value>&quot;Michelle Huthwaite&quot;</value>
                  <value>&quot;Mick Crebagga&quot;</value>
                  <value>&quot;Mike Vittorini&quot;</value>
                  <value>&quot;Mitch Gastineau&quot;</value>
                  <value>&quot;Muhammed Lee&quot;</value>
                  <value>&quot;Muhammed MacIntyre&quot;</value>
                  <value>&quot;Nat Carroll&quot;</value>
                  <value>&quot;Nat Gilpin&quot;</value>
                  <value>&quot;Natalie Webber&quot;</value>
                  <value>&quot;Nathan Gelder&quot;</value>
                  <value>&quot;Neil Französisch&quot;</value>
                  <value>&quot;Neola Schneider&quot;</value>
                  <value>&quot;Nick Radford&quot;</value>
                  <value>&quot;Nick Zandusky&quot;</value>
                  <value>&quot;Nicole Fjeld&quot;</value>
                  <value>&quot;Nicole Hansen&quot;</value>
                  <value>&quot;Noah Childs&quot;</value>
                  <value>&quot;Noel Staavos&quot;</value>
                  <value>&quot;Nona Balk&quot;</value>
                  <value>&quot;Nora Paige&quot;</value>
                  <value>&quot;Nora Pelletier&quot;</value>
                  <value>&quot;Pamela Coakley&quot;</value>
                  <value>&quot;Patrick Gardner&quot;</value>
                  <value>&quot;Paul Stevenson&quot;</value>
                  <value>&quot;Paul Van Hugh&quot;</value>
                  <value>&quot;Pauline Chand&quot;</value>
                  <value>&quot;Pauline Johnson&quot;</value>
                  <value>&quot;Pauline Webber&quot;</value>
                  <value>&quot;Peter Bühler&quot;</value>
                  <value>&quot;Philisse Overcash&quot;</value>
                  <value>&quot;Phillina Ober&quot;</value>
                  <value>&quot;Phillip Flathmann&quot;</value>
                  <value>&quot;Quincy Jones&quot;</value>
                  <value>&quot;Ralph Arnett&quot;</value>
                  <value>&quot;Ralph Kennedy&quot;</value>
                  <value>&quot;Ralph Ritter&quot;</value>
                  <value>&quot;Raymond Buch&quot;</value>
                  <value>&quot;Ricardo Emerson&quot;</value>
                  <value>&quot;Ricardo Sperren&quot;</value>
                  <value>&quot;Rick Duston&quot;</value>
                  <value>&quot;Rick Reed&quot;</value>
                  <value>&quot;Rick Wilson&quot;</value>
                  <value>&quot;Rob Haberlin&quot;</value>
                  <value>&quot;Roger Barcio&quot;</value>
                  <value>&quot;Roger Demir&quot;</value>
                  <value>&quot;Roland Schwarz&quot;</value>
                  <value>&quot;Ross Baird&quot;</value>
                  <value>&quot;Ross DeVincentis&quot;</value>
                  <value>&quot;Roy Collins&quot;</value>
                  <value>&quot;Roy Französisch&quot;</value>
                  <value>&quot;Roy Skaria&quot;</value>
                  <value>&quot;Ruben Ausman&quot;</value>
                  <value>&quot;Ruben Dartt&quot;</value>
                  <value>&quot;Russell Applegate&quot;</value>
                  <value>&quot;Ryan Crowe&quot;</value>
                  <value>&quot;Sally Knutson&quot;</value>
                  <value>&quot;Sally Matthias&quot;</value>
                  <value>&quot;Sam Craven&quot;</value>
                  <value>&quot;Sanjit Engle&quot;</value>
                  <value>&quot;Scot Wooten&quot;</value>
                  <value>&quot;Sean O&apos;Donnell&quot;</value>
                  <value>&quot;Seth Vernon&quot;</value>
                  <value>&quot;Shahid Shariari&quot;</value>
                  <value>&quot;Sharelle Roach&quot;</value>
                  <value>&quot;Stefanie Holloman&quot;</value>
                  <value>&quot;Stephanie Phelps&quot;</value>
                  <value>&quot;Steve Chapman&quot;</value>
                  <value>&quot;Steven Cartwright&quot;</value>
                  <value>&quot;Steven Roelle&quot;</value>
                  <value>&quot;Stewart Carmichael&quot;</value>
                  <value>&quot;Stuart Calhoun&quot;</value>
                  <value>&quot;Stuart Van&quot;</value>
                  <value>&quot;Sung Shariari&quot;</value>
                  <value>&quot;Susan Gilcrest&quot;</value>
                  <value>&quot;Susan Pistek&quot;</value>
                  <value>&quot;Sylvia Foulston&quot;</value>
                  <value>&quot;Tamara Chand&quot;</value>
                  <value>&quot;Tamara Manning&quot;</value>
                  <value>&quot;Tamara Willingham&quot;</value>
                  <value>&quot;Ted Trevino&quot;</value>
                  <value>&quot;Thais Sissman&quot;</value>
                  <value>&quot;Thea Hendricks&quot;</value>
                  <value>&quot;Thea Hudgings&quot;</value>
                  <value>&quot;Thomas Brumley&quot;</value>
                  <value>&quot;Thomas Seio&quot;</value>
                  <value>&quot;Thomas Thornton&quot;</value>
                  <value>&quot;Tiffany House&quot;</value>
                  <value>&quot;Tim Brockman&quot;</value>
                  <value>&quot;Tim Taslimi&quot;</value>
                  <value>&quot;Toby Gnade&quot;</value>
                  <value>&quot;Toby Ritter&quot;</value>
                  <value>&quot;Toby Swindell&quot;</value>
                  <value>&quot;Tonja Turnell&quot;</value>
                  <value>&quot;Tony Chapman&quot;</value>
                  <value>&quot;Tony Molinari&quot;</value>
                  <value>&quot;Tracy Collins&quot;</value>
                  <value>&quot;Tracy Poddar&quot;</value>
                  <value>&quot;Tracy Zic&quot;</value>
                  <value>&quot;Trudy Schmidt&quot;</value>
                  <value>&quot;Vicky Freymann&quot;</value>
                  <value>&quot;Victoria Brennan&quot;</value>
                  <value>&quot;Vivek Gonzalez&quot;</value>
                  <value>&quot;Vivek Grady&quot;</value>
                  <value>&quot;Yana Sorensen&quot;</value>
                  <value>&quot;Zuschuss Carroll&quot;</value>
                  <value>&quot;Zuschuss Donatelli&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2 Time Return&quot;'>
                  <value>&quot;Aaron Smayling&quot;</value>
                  <value>&quot;Adam Shillingsburg&quot;</value>
                  <value>&quot;Adrian Hane&quot;</value>
                  <value>&quot;Alice McCarthy&quot;</value>
                  <value>&quot;Allen Rosenblatt&quot;</value>
                  <value>&quot;Alyssa Tate&quot;</value>
                  <value>&quot;Amy Hunt&quot;</value>
                  <value>&quot;Angele Hood&quot;</value>
                  <value>&quot;Anthony Garverick&quot;</value>
                  <value>&quot;Anthony Jacobs&quot;</value>
                  <value>&quot;Anthony O&apos;Donnell&quot;</value>
                  <value>&quot;Arianne Irving&quot;</value>
                  <value>&quot;Arthur Prichep&quot;</value>
                  <value>&quot;Astrea Jones&quot;</value>
                  <value>&quot;Barry Blumstein&quot;</value>
                  <value>&quot;Becky Castell&quot;</value>
                  <value>&quot;Becky Martin&quot;</value>
                  <value>&quot;Benjamin Patterson&quot;</value>
                  <value>&quot;Bill Shonely&quot;</value>
                  <value>&quot;Bradley Nguyen&quot;</value>
                  <value>&quot;Bradley Talbott&quot;</value>
                  <value>&quot;Brenda Bowman&quot;</value>
                  <value>&quot;Brian Moss&quot;</value>
                  <value>&quot;Brian Thompson&quot;</value>
                  <value>&quot;Brooke Gillingham&quot;</value>
                  <value>&quot;Candace McMahon&quot;</value>
                  <value>&quot;Carl Jackson&quot;</value>
                  <value>&quot;Carl Ludwig&quot;</value>
                  <value>&quot;Carlos Daly&quot;</value>
                  <value>&quot;Carol Darley&quot;</value>
                  <value>&quot;Caroline Jumper&quot;</value>
                  <value>&quot;Cassandra Brandow&quot;</value>
                  <value>&quot;Cathy Armstrong&quot;</value>
                  <value>&quot;Chad McGuire&quot;</value>
                  <value>&quot;Chris McAfee&quot;</value>
                  <value>&quot;Christina Anderson&quot;</value>
                  <value>&quot;Christine Abelman&quot;</value>
                  <value>&quot;Christine Phan&quot;</value>
                  <value>&quot;Chuck Magee&quot;</value>
                  <value>&quot;Chuck Sachs&quot;</value>
                  <value>&quot;Cindy Chapman&quot;</value>
                  <value>&quot;Clay Ludtke&quot;</value>
                  <value>&quot;Craig Carroll&quot;</value>
                  <value>&quot;Craig Leslie&quot;</value>
                  <value>&quot;Craig Reiter&quot;</value>
                  <value>&quot;Craig Yedwab&quot;</value>
                  <value>&quot;Cynthia Delaney&quot;</value>
                  <value>&quot;Cynthia Voltz&quot;</value>
                  <value>&quot;Cyra Reiten&quot;</value>
                  <value>&quot;Dan Reichenbach&quot;</value>
                  <value>&quot;Dario Medina&quot;</value>
                  <value>&quot;Darren Budd&quot;</value>
                  <value>&quot;Dave Kipp&quot;</value>
                  <value>&quot;David Bremer&quot;</value>
                  <value>&quot;David Wiener&quot;</value>
                  <value>&quot;Deborah Brumfield&quot;</value>
                  <value>&quot;Deirdre Greer&quot;</value>
                  <value>&quot;Dennis Bolton&quot;</value>
                  <value>&quot;Dennis Kane&quot;</value>
                  <value>&quot;Don Jones&quot;</value>
                  <value>&quot;Dorothy Badders&quot;</value>
                  <value>&quot;Dorothy Wardle&quot;</value>
                  <value>&quot;Dorris liebe&quot;</value>
                  <value>&quot;Ed Ludwig&quot;</value>
                  <value>&quot;Edward Nazzal&quot;</value>
                  <value>&quot;Eileen Kiefer&quot;</value>
                  <value>&quot;Emily Grady&quot;</value>
                  <value>&quot;Eric Barreto&quot;</value>
                  <value>&quot;Eric Murdock&quot;</value>
                  <value>&quot;Erin Creighton&quot;</value>
                  <value>&quot;Evan Henry&quot;</value>
                  <value>&quot;Frank Atkinson&quot;</value>
                  <value>&quot;Frank Gastineau&quot;</value>
                  <value>&quot;Fred Hopkins&quot;</value>
                  <value>&quot;Gary McGarr&quot;</value>
                  <value>&quot;Gary Zandusky&quot;</value>
                  <value>&quot;Giulietta Dortch&quot;</value>
                  <value>&quot;Giulietta Weimer&quot;</value>
                  <value>&quot;Harold Dahlen&quot;</value>
                  <value>&quot;Henry Goldwyn&quot;</value>
                  <value>&quot;Henry MacAllister&quot;</value>
                  <value>&quot;Herbert Flentye&quot;</value>
                  <value>&quot;Hunter Glantz&quot;</value>
                  <value>&quot;Irene Maddox&quot;</value>
                  <value>&quot;Ivan Gibson&quot;</value>
                  <value>&quot;Jack Garza&quot;</value>
                  <value>&quot;Janet Molinari&quot;</value>
                  <value>&quot;Jason Fortune-&quot;</value>
                  <value>&quot;Jason Gross&quot;</value>
                  <value>&quot;Jennifer Halladay&quot;</value>
                  <value>&quot;Jeremy Farry&quot;</value>
                  <value>&quot;Jill Fjeld&quot;</value>
                  <value>&quot;Jim Epp&quot;</value>
                  <value>&quot;Joni Wasserman&quot;</value>
                  <value>&quot;Joseph Airdo&quot;</value>
                  <value>&quot;Joy Bell-&quot;</value>
                  <value>&quot;Julia Dunbar&quot;</value>
                  <value>&quot;Julia West&quot;</value>
                  <value>&quot;Julie Kriz&quot;</value>
                  <value>&quot;Justin Deggeller&quot;</value>
                  <value>&quot;Karen Carlisle&quot;</value>
                  <value>&quot;Keith Dawkins&quot;</value>
                  <value>&quot;Kelly Lampkin&quot;</value>
                  <value>&quot;Ken Brennan&quot;</value>
                  <value>&quot;Kimberly Carter&quot;</value>
                  <value>&quot;Larry Tron&quot;</value>
                  <value>&quot;Laurel Elliston&quot;</value>
                  <value>&quot;Lena Cacioppo&quot;</value>
                  <value>&quot;Lena Creighton&quot;</value>
                  <value>&quot;Linda Southworth&quot;</value>
                  <value>&quot;Liz Pelletier&quot;</value>
                  <value>&quot;Luke Schmidt&quot;</value>
                  <value>&quot;Lycoris Saunders&quot;</value>
                  <value>&quot;Magdelene Morse&quot;</value>
                  <value>&quot;Marc Crier&quot;</value>
                  <value>&quot;Maria Etezadi&quot;</value>
                  <value>&quot;Marina Lichtenstein&quot;</value>
                  <value>&quot;Maris LaWare&quot;</value>
                  <value>&quot;Mark Haberlin&quot;</value>
                  <value>&quot;Mark Hamilton&quot;</value>
                  <value>&quot;Mark Van Huff&quot;</value>
                  <value>&quot;Matt Connell&quot;</value>
                  <value>&quot;Maureen Gastineau&quot;</value>
                  <value>&quot;Max Jones&quot;</value>
                  <value>&quot;Michael Granlund&quot;</value>
                  <value>&quot;Michael Nguyen&quot;</value>
                  <value>&quot;Michael Paige&quot;</value>
                  <value>&quot;Michael Stewart&quot;</value>
                  <value>&quot;Michelle Moray&quot;</value>
                  <value>&quot;Mike Pelletier&quot;</value>
                  <value>&quot;Mitch Webber&quot;</value>
                  <value>&quot;Natalie Fritzler&quot;</value>
                  <value>&quot;Neil Knudson&quot;</value>
                  <value>&quot;Nick Crebassa&quot;</value>
                  <value>&quot;Nicole Brennan&quot;</value>
                  <value>&quot;Olvera Toch&quot;</value>
                  <value>&quot;Pamela Stobb&quot;</value>
                  <value>&quot;Parhena Norris&quot;</value>
                  <value>&quot;Patrick Bzostek&quot;</value>
                  <value>&quot;Patrick O&apos;Donnell&quot;</value>
                  <value>&quot;Pete Kriz&quot;</value>
                  <value>&quot;Pete Takahito&quot;</value>
                  <value>&quot;Peter Fuller&quot;</value>
                  <value>&quot;Phillip Breyer&quot;</value>
                  <value>&quot;Rachel Payne&quot;</value>
                  <value>&quot;Randy Bradley&quot;</value>
                  <value>&quot;Raymond Messe&quot;</value>
                  <value>&quot;Richard Bierner&quot;</value>
                  <value>&quot;Ritsa Hightower&quot;</value>
                  <value>&quot;Rob Beeghly&quot;</value>
                  <value>&quot;Rob Williams&quot;</value>
                  <value>&quot;Robert Barroso&quot;</value>
                  <value>&quot;Sally Hughsby&quot;</value>
                  <value>&quot;Sample Company A&quot;</value>
                  <value>&quot;Sandra Glassco&quot;</value>
                  <value>&quot;Sanjit Chand&quot;</value>
                  <value>&quot;Sara Luxemburg&quot;</value>
                  <value>&quot;Sarah Brown&quot;</value>
                  <value>&quot;Scot Coram&quot;</value>
                  <value>&quot;Sean Wendt&quot;</value>
                  <value>&quot;Shirley Daniels&quot;</value>
                  <value>&quot;Shirley Schmidt&quot;</value>
                  <value>&quot;Shui Tom&quot;</value>
                  <value>&quot;Skye Norling&quot;</value>
                  <value>&quot;Speros Goranitis&quot;</value>
                  <value>&quot;Steve Carroll&quot;</value>
                  <value>&quot;Steven Ward&quot;</value>
                  <value>&quot;Stewart Visinsky&quot;</value>
                  <value>&quot;Sue Ann Reed&quot;</value>
                  <value>&quot;Sung Chung&quot;</value>
                  <value>&quot;Susan Vittorini&quot;</value>
                  <value>&quot;Suzanne McNair&quot;</value>
                  <value>&quot;Tamara Dahlen&quot;</value>
                  <value>&quot;Tom Prescott&quot;</value>
                  <value>&quot;Tony Sayre&quot;</value>
                  <value>&quot;Tracy Blumstein&quot;</value>
                  <value>&quot;Trudy Glocke&quot;</value>
                  <value>&quot;Valerie Dominguez&quot;</value>
                  <value>&quot;Victor Preis&quot;</value>
                  <value>&quot;Victoria Wilson&quot;</value>
                  <value>&quot;Vivian Mathis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;3 Time Return&quot;'>
                  <value>&quot;Alan Barnes&quot;</value>
                  <value>&quot;Alejandro Ballentine&quot;</value>
                  <value>&quot;Andy Gerbode&quot;</value>
                  <value>&quot;Ann Blume&quot;</value>
                  <value>&quot;Anna Gayman&quot;</value>
                  <value>&quot;Anna Häberlin&quot;</value>
                  <value>&quot;Anthony Witt&quot;</value>
                  <value>&quot;Bart Pistole&quot;</value>
                  <value>&quot;Ben Ferrer&quot;</value>
                  <value>&quot;Bobby Elias&quot;</value>
                  <value>&quot;Brendan Murry&quot;</value>
                  <value>&quot;Bruce Degenhardt&quot;</value>
                  <value>&quot;Bryan Mills&quot;</value>
                  <value>&quot;Catherine Glotzbach&quot;</value>
                  <value>&quot;Christine Sundaresam&quot;</value>
                  <value>&quot;Dean Braden&quot;</value>
                  <value>&quot;Dianna Arnett&quot;</value>
                  <value>&quot;Ed Jacobs&quot;</value>
                  <value>&quot;Elizabeth Moffitt&quot;</value>
                  <value>&quot;Emily Phan&quot;</value>
                  <value>&quot;Eric Hoffmann&quot;</value>
                  <value>&quot;Erica Bern&quot;</value>
                  <value>&quot;Erin Smith&quot;</value>
                  <value>&quot;Eva Jacobs&quot;</value>
                  <value>&quot;Frank Olsen&quot;</value>
                  <value>&quot;George Bell&quot;</value>
                  <value>&quot;George Zrebassa&quot;</value>
                  <value>&quot;Grace Kelly&quot;</value>
                  <value>&quot;Greg Guthrie&quot;</value>
                  <value>&quot;Harold Pawlan&quot;</value>
                  <value>&quot;Harry Greene&quot;</value>
                  <value>&quot;Harry Marie&quot;</value>
                  <value>&quot;James Galang&quot;</value>
                  <value>&quot;Jane Waco&quot;</value>
                  <value>&quot;Jenna Caffey&quot;</value>
                  <value>&quot;Jim Kriz&quot;</value>
                  <value>&quot;Jocasta Rupert&quot;</value>
                  <value>&quot;Jonathan Doherty&quot;</value>
                  <value>&quot;Joseph Holt&quot;</value>
                  <value>&quot;Juliana Krohn&quot;</value>
                  <value>&quot;Katherine Ducich&quot;</value>
                  <value>&quot;Katherine Nockton&quot;</value>
                  <value>&quot;Kean Takahito&quot;</value>
                  <value>&quot;Kelly Andreada&quot;</value>
                  <value>&quot;Laura Armstrong&quot;</value>
                  <value>&quot;Laurel Beltran&quot;</value>
                  <value>&quot;Lena Radford&quot;</value>
                  <value>&quot;Liz Thompson&quot;</value>
                  <value>&quot;Logan Haushalter&quot;</value>
                  <value>&quot;Luke Weiss&quot;</value>
                  <value>&quot;Maribeth Yedwab&quot;</value>
                  <value>&quot;Mark Cousins&quot;</value>
                  <value>&quot;Maureen Fritzler&quot;</value>
                  <value>&quot;Max Ludwig&quot;</value>
                  <value>&quot;Michael Oakman&quot;</value>
                  <value>&quot;Michelle Arnett&quot;</value>
                  <value>&quot;Mick Hernandez&quot;</value>
                  <value>&quot;Mike Gockenbach&quot;</value>
                  <value>&quot;Muhammed Yedwab&quot;</value>
                  <value>&quot;Natalie DeCherney&quot;</value>
                  <value>&quot;Nathan Mautz&quot;</value>
                  <value>&quot;Odella Nelson&quot;</value>
                  <value>&quot;Paul Knutson&quot;</value>
                  <value>&quot;Paul MacIntyre&quot;</value>
                  <value>&quot;Penelope Sewall&quot;</value>
                  <value>&quot;Philip Brown&quot;</value>
                  <value>&quot;Philip Fox&quot;</value>
                  <value>&quot;Rick Hansen&quot;</value>
                  <value>&quot;Rob Dowd&quot;</value>
                  <value>&quot;Rob Lucas&quot;</value>
                  <value>&quot;Roland Murray&quot;</value>
                  <value>&quot;Russell D&apos;Ascenzo&quot;</value>
                  <value>&quot;Sam Zeldin&quot;</value>
                  <value>&quot;Sanjit Jacobs&quot;</value>
                  <value>&quot;Sarah Foster&quot;</value>
                  <value>&quot;Scott Williamson&quot;</value>
                  <value>&quot;Sean Christensen&quot;</value>
                  <value>&quot;Shahid Collister&quot;</value>
                  <value>&quot;Shahid Hopkins&quot;</value>
                  <value>&quot;Sonia Cooley&quot;</value>
                  <value>&quot;Sung Pak&quot;</value>
                  <value>&quot;Theresa Coyne&quot;</value>
                  <value>&quot;Toby Carlisle&quot;</value>
                  <value>&quot;Tom Boeckenhauer&quot;</value>
                  <value>&quot;Tom Zandusky&quot;</value>
                  <value>&quot;William Brown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;4 Time Return&quot;'>
                  <value>&quot;Alejandro Savely&quot;</value>
                  <value>&quot;Anna Andreadi&quot;</value>
                  <value>&quot;Ashley Jarboe&quot;</value>
                  <value>&quot;Brendan Sweed&quot;</value>
                  <value>&quot;Cari Schnelling&quot;</value>
                  <value>&quot;Carl Weiss&quot;</value>
                  <value>&quot;Dana Kaydos&quot;</value>
                  <value>&quot;Darren Koutras&quot;</value>
                  <value>&quot;Darrin Van Huff&quot;</value>
                  <value>&quot;David Philippe&quot;</value>
                  <value>&quot;Doug O&apos;Connell&quot;</value>
                  <value>&quot;Edward Hooks&quot;</value>
                  <value>&quot;Erica Smith&quot;</value>
                  <value>&quot;Eugene Barchas&quot;</value>
                  <value>&quot;Joel Eaton&quot;</value>
                  <value>&quot;John Castell&quot;</value>
                  <value>&quot;Julie Creighton&quot;</value>
                  <value>&quot;Karl Braun&quot;</value>
                  <value>&quot;Kristen Hastings&quot;</value>
                  <value>&quot;Lauren Leatherbury&quot;</value>
                  <value>&quot;Mick Brown&quot;</value>
                  <value>&quot;Patrick O&apos;Brill&quot;</value>
                  <value>&quot;Rick Huthwaite&quot;</value>
                  <value>&quot;Ryan Akin&quot;</value>
                  <value>&quot;Sarah Jordon&quot;</value>
                  <value>&quot;Scott Cohen&quot;</value>
                  <value>&quot;Sonia Sunley&quot;</value>
                  <value>&quot;Theresa Swint&quot;</value>
                  <value>&quot;Toby Braunhardt&quot;</value>
                  <value>&quot;Trudy Brown&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;5 Time Return&quot;'>
                  <value>&quot;Daniel Lacy&quot;</value>
                  <value>&quot;Darrin Martin&quot;</value>
                  <value>&quot;Eugene Hildebrand&quot;</value>
                  <value>&quot;Gary Mitchum&quot;</value>
                  <value>&quot;Greg Tran&quot;</value>
                  <value>&quot;Jeremy Pistek&quot;</value>
                  <value>&quot;Patrick Ryan&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;6 Time Return&quot;'>
                  <value>&quot;Andrew Gjertsen&quot;</value>
                  <value>&quot;Anne McFarland&quot;</value>
                  <value>&quot;Brian DeCherney&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='RETURNS' datatype='integer' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='RETURNS' datatype='table' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1640436172483256326]' derivation='None' name='[none:Calculation_1640436172483256326:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[Customer Name (group)]' direction='DESC' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Customer Name (group)]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]</rows>
        <cols>([federated.19e9d451md2q431af4r410l45vz4].[Customer Name (group)] / [federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk])</cols>
      </table>
      <simple-id uuid='{A02D0203-700A-47FC-A488-1471E11B87AE}' />
    </worksheet>
    <worksheet name='CASE_1_T4'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
            </column>
            <column caption='ShipModeDayRequired' datatype='integer' name='[Calculation_1640436172461154308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Ship Mode]==&apos;Same Day&apos;,0,IIF([Ship Mode]==&apos;first class&apos;,2,IIf([Ship Mode]==&apos;second class&apos;,3,5)))' />
            </column>
            <column caption='DelayDelivery ' datatype='string' name='[Calculation_1640436172483256326]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIf([Calculation_1640436172460761091]-[Calculation_1640436172461154308]&gt;0,&apos;Y&apos;,&apos;N&apos;)' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='RETURNS' datatype='integer' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='RETURNS' datatype='table' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1640436172483256326]' derivation='None' name='[none:Calculation_1640436172483256326:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]</cols>
      </table>
      <simple-id uuid='{EDE5DE67-F0CB-4D26-8B81-F54238271933}' />
    </worksheet>
    <worksheet name='CASE_1_T5'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='RETURNS' datatype='integer' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='RETURNS' datatype='table' name='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order ID]' derivation='Count' name='[cnt:Order ID:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Order ID:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Order ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]</rows>
        <cols>([federated.19e9d451md2q431af4r410l45vz4].[cnt:Order ID:qk] + [federated.19e9d451md2q431af4r410l45vz4].[__tableau_internal_object_id__].[cnt:RETURNS_6D109BD44A8D4D009E5D30B95E9E4D5A:qk])</cols>
      </table>
      <simple-id uuid='{F8F6BA9B-1D89-42EA-834E-61441B580DB8}' />
    </worksheet>
    <worksheet name='CASE_2_T1'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Discount (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Discount]' new-bin='true'>
                <bin default-name='false' value='&quot;MaxD&quot;'>
                  <value>0.40000000000000002</value>
                  <value>0.40200000000000002</value>
                  <value>0.44999999999999996</value>
                  <value>0.45000000000000001</value>
                  <value>0.47000000000000003</value>
                  <value>0.5</value>
                  <value>0.55000000000000004</value>
                  <value>0.57000000000000006</value>
                  <value>0.59999999999999998</value>
                  <value>0.60199999999999998</value>
                  <value>0.65000000000000002</value>
                  <value>0.69999999999999996</value>
                  <value>0.80000000000000004</value>
                  <value>0.84999999999999998</value>
                </bin>
                <bin default-name='false' value='&quot;MinD&quot;'>
                  <value>0.0</value>
                  <value>0.002</value>
                  <value>0.070000000000000007</value>
                  <value>0.10000000000000001</value>
                  <value>0.14999999999999999</value>
                  <value>0.15000000000000002</value>
                  <value>0.17000000000000001</value>
                  <value>0.20000000000000001</value>
                  <value>0.20200000000000001</value>
                  <value>0.25</value>
                  <value>0.27000000000000002</value>
                  <value>0.29999999999999999</value>
                  <value>0.32000000000000001</value>
                  <value>0.34999999999999998</value>
                  <value>0.37</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]</cols>
      </table>
      <simple-id uuid='{525E731D-8E58-4B3E-84FC-EE52B174EF12}' />
    </worksheet>
    <worksheet name='CASE_2_T2'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Discount (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Discount]' new-bin='true'>
                <bin default-name='false' value='&quot;MaxD&quot;'>
                  <value>0.40000000000000002</value>
                  <value>0.40200000000000002</value>
                  <value>0.44999999999999996</value>
                  <value>0.45000000000000001</value>
                  <value>0.47000000000000003</value>
                  <value>0.5</value>
                  <value>0.55000000000000004</value>
                  <value>0.57000000000000006</value>
                  <value>0.59999999999999998</value>
                  <value>0.60199999999999998</value>
                  <value>0.65000000000000002</value>
                  <value>0.69999999999999996</value>
                  <value>0.80000000000000004</value>
                  <value>0.84999999999999998</value>
                </bin>
                <bin default-name='false' value='&quot;MinD&quot;'>
                  <value>0.0</value>
                  <value>0.002</value>
                  <value>0.070000000000000007</value>
                  <value>0.10000000000000001</value>
                  <value>0.14999999999999999</value>
                  <value>0.15000000000000002</value>
                  <value>0.17000000000000001</value>
                  <value>0.20000000000000001</value>
                  <value>0.20200000000000001</value>
                  <value>0.25</value>
                  <value>0.27000000000000002</value>
                  <value>0.29999999999999999</value>
                  <value>0.32000000000000001</value>
                  <value>0.34999999999999998</value>
                  <value>0.37</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]</cols>
      </table>
      <simple-id uuid='{AC7D088E-6C28-4075-93DD-FA42471AA5C6}' />
    </worksheet>
    <worksheet name='CASE_2_T3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column caption='DayForDelev' datatype='integer' name='[Calculation_1640436172460761091]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Ship Date]-[Order Date]' />
            </column>
            <column caption='ShipModeDayRequired' datatype='integer' name='[Calculation_1640436172461154308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IIF([Ship Mode]==&apos;Same Day&apos;,0,IIF([Ship Mode]==&apos;first class&apos;,2,IIf([Ship Mode]==&apos;second class&apos;,3,5)))' />
            </column>
            <column caption='IsEarly' datatype='string' name='[Calculation_1640436172493524999]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIf([Calculation_1640436172460761091]-[Calculation_1640436172461154308]&lt;0,&apos;Y&apos;,&apos;N&apos;)' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1640436172493524999]' derivation='None' name='[none:Calculation_1640436172493524999:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172493524999:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172493524999:nk]</cols>
      </table>
      <simple-id uuid='{5189616C-893A-40BD-9FC9-7AB9258B910E}' />
    </worksheet>
    <worksheet name='CASE_2_T4'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product ID]' derivation='Count' name='[cnt:Product ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product ID]' derivation='None' name='[none:Product ID:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Product ID:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Product ID:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[none:Product ID:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19e9d451md2q431af4r410l45vz4].[cnt:Product ID:qk] + [federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk])</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]</cols>
      </table>
      <simple-id uuid='{7845E63E-5CB9-4AAC-8C7E-0444E92E3B8B}' />
    </worksheet>
    <worksheet name='CASE_2_T5'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='Count' name='[cnt:Customer Name:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Market]' derivation='Max' name='[max:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[max:Market:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Customer Name:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Customer Name:qk]' value='92' />
            <format attr='width' field='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]' value='92' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19e9d451md2q431af4r410l45vz4].[max:Market:nk]' value='59' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
            </encodings>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[cnt:Customer Name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
            </encodings>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.19e9d451md2q431af4r410l45vz4].[cnt:Customer Name:qk] + [federated.19e9d451md2q431af4r410l45vz4].[sum:Sales:qk])</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[max:Market:nk]</cols>
      </table>
      <simple-id uuid='{33D51ECB-4640-4278-AB51-CE216B0D787E}' />
    </worksheet>
    <worksheet name='CASE_3_2nd_way'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19e9d451md2q431af4r410l45vz4].[Inclusions (Country,Region,YEAR(Order Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Region:nk]' member='&quot;Eastern Asia&quot;' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southern Asia&quot;' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.19e9d451md2q431af4r410l45vz4].[Inclusions (Region,YEAR(Order Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;Eastern Asia&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southern Asia&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Europe&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2014' />
                  <groupfilter function='member' level='[yr:Order Date:ok]' member='2015' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Southern Asia&quot;</bucket>
              <bucket>&quot;Eastern Asia&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]' direction='ASC' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' shelf='columns' />
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:City:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19e9d451md2q431af4r410l45vz4].[Inclusions (Region,YEAR(Order Date))]</column>
            <column>[federated.19e9d451md2q431af4r410l45vz4].[Inclusions (Country,Region,YEAR(Order Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[yr:Order Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]</rows>
        <cols>([federated.19e9d451md2q431af4r410l45vz4].[yr:Order Date:ok] / ([federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk] / ([federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk] / [federated.19e9d451md2q431af4r410l45vz4].[none:City:nk])))</cols>
      </table>
      <simple-id uuid='{0D9A1A0E-E1D8-464E-9585-D9B29B2C3D42}' />
    </worksheet>
    <worksheet name='CASE_3_simple_way'>
      <table>
        <view>
          <datasources>
            <datasource caption='ORDERS (Online assignment1 DATASET)' name='federated.19e9d451md2q431af4r410l45vz4' />
          </datasources>
          <datasource-dependencies datasource='federated.19e9d451md2q431af4r410l45vz4'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19e9d451md2q431af4r410l45vz4].[avg:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='599' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]' />
              <text column='[federated.19e9d451md2q431af4r410l45vz4].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.19e9d451md2q431af4r410l45vz4].[avg:Profit:qk]</rows>
        <cols>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{8268C0F4-46A1-44CE-ABDC-77F4CEB7C88B}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='CASE_1_T1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C59D9D24-AB14-43DA-B81A-7CA9F0F6408D}' />
    </window>
    <window class='worksheet' maximized='true' name='CASE_1_T2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; Ship Mode (Combined)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Customer Name:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E48C9B41-9EEA-436D-8AAB-5AC15A940DC2}' />
    </window>
    <window class='worksheet' name='CASE_1_T3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[Customer Name (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Customer Name (group)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Returned (group)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Customer ID:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Customer Name:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region (RETURNS):nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9A60A4CB-0EA2-4836-9B44-405A3737097E}' />
    </window>
    <window class='worksheet' name='CASE_1_T4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Returned (group)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC405B56-197E-42C7-AFCC-789026A42BAD}' />
    </window>
    <window class='worksheet' name='CASE_1_T5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Region &amp; State (Combined)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Order ID:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{805C528D-5804-47E6-A6CB-27362E70D225}' />
    </window>
    <window class='worksheet' name='CASE_2_T1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9437BF37-84FE-4FD4-B863-5BB0C7E1DA1F}' />
    </window>
    <window class='worksheet' name='CASE_2_T2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84D1BE9C-12A4-4CAC-A3B7-822F9E72946E}' />
    </window>
    <window class='worksheet' name='CASE_2_T3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172493524999:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172493524999:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66932E29-A5C0-48B6-8F16-CB8BF4346F66}' />
    </window>
    <window class='worksheet' name='CASE_2_T4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Product ID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90469969-6EF7-4297-8DD3-C78A41026AFF}' />
    </window>
    <window class='worksheet' name='CASE_2_T5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='11' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Customer Name &amp; Product ID (Combined)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[max:Market:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Customer Name:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Product ID:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region (PEOPLE):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCE36CB6-22BB-4DE5-8356-4157A90AD1E5}' />
    </window>
    <window class='worksheet' name='CASE_3_simple_way'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='9' param='[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[Discount (group)]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172483256326:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Calculation_1640436172493524999:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Category:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:City:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Customer Name:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Market:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Order ID:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Order Priority:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Returned:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:State:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{42223BB5-7614-4F15-87E4-F57451414EE4}' />
    </window>
    <window class='worksheet' name='CASE_3_2nd_way'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.19e9d451md2q431af4r410l45vz4].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:City:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Country:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[none:Region:nk]</field>
            <field>[federated.19e9d451md2q431af4r410l45vz4].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D94A6B14-8A4A-4B52-8B0C-22C8272897A5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CASE_1_T1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAS0klEQVR4nO3da3hU9Z3A8e85Z665DExuk5AbhPu14SaBBTGiKKLY1lW61qU+1gddL/ui
      a7esfbR13dpnn67bffRB1+rWtl4KtFYfharrBQURLMrNBDF3Agkh90kySWbmXPZFIBBxt11b
      Zgz/3+fdcCZz/gPzzTlnHOenOY7jIISCNE3T9GQvQohkkgCE0iQAoTQJQChNAhBKkwCE0iQA
      oTQJINmsKPUfvcqPfvADHnjgQf7tkV9RG45y/J3/4odPvE3k7LsOhHni+3fyUkXrH33Yo9t/
      xj//6Je0xoZudx87yAO3/zV3/vBpTg7+8WWd+Ogl7v/3TfR9sWc1ariSvQDVxbob+dXPXuXS
      B37MkmwPHY0NOC6dgWiEnt5BzHicmONguNxobj9L16zFn5cOjk3ctNAA23HQDReGoaOdelwz
      2kfI+pTGlgg5Ral0HK/BG8ihp7cfywHHcbDMOLbD0M/qOprmYFsWpmUTHYgQ7o1iA45tY5om
      DhqGy4Wha//HMxpdJIAk0zQNXYvS3NRKPHs8ORMmA9CATWfzYV58tp7aAwfIuORu7rxqAh9s
      +w3+r02hxKll/d2/YtGlC2mvP4xdfCl3fWs1Gb4zL84Z47P4pOYYC4om0VBTx8RZU/nkEOCY
      HN37e57Ztg/No4F/Ijfdch2FRjtPb3ycuoFUUmIt9OpzAYu9257mvw82g2kSmFLOzTeUE7hA
      XjlyCpRk7rFF3HLXN6j+3RP8608e5fXdR+g3bUAjJVjE1d+8jb9fu5iaA0dGnA4BuFKzKP/q
      t9hw3z/grX2TAw1dI7YXTynh5LEG7MFj1J/IYWpxGgDxSCebf/s2y2+6g3/asIHZrgpee7+a
      6h0vUpO2lA33buBb1ywm3QP0HuGVNxoou2ot31i7kvBHr3GkJZqQv5tEuEA6HsV0D/mzyvn+
      g0s5UfUBj//Hw/R4/4WFaPhS0vF5XMQMHWyHz35oy+Xx4HW7cfnzyQ1EaQ/3AhnD20NFEzHf
      3Ed9rU1PyTTyPBUAxGOdHB9MYVJWAMPwUFCYwd6GRo5Zx8kZfyUBr0Hv6dOc1kYq29rI3reH
      JjeULF5KbsqFcwokR4Aki0W6qaquYdAyCE2Yzox8H13hP+03rG1ZWLZFpO0gtW1jGZ+XOWK7
      PjafBRlNPPf7ZkpnFQ//Y3t8WUxI7afyRBeWOUhNdQvFk8eTk5dFa9NR+mIm/ZEIlgXkFDM+
      zc2MxatYt+5vuWZFGUH/hfOykSNAkjnxCBXvvsivfz2AY9vogfncPC8X9rrwuI2hi1rdhcdj
      oGngcntxnfrtHDlRxS8e/TFmfx/Tr/wGs/LThh9XN9xoWhpz5k/g8V80883MAFrYjcdj4k4Z
      y9q/Wc0zv/lP3nNs0kJLuXHRZLLjXyfvkcf4l4f2Mj4IursALX0qN14zhy2/+Am7AmMJlcxi
      9eqrSPcn5+/rL02Tj0OPUu27+Lv73+R7D/2A8WOTvZjRST4OPZq5Uhg3LgePkeyFjG6j7ghg
      2zYAui7tij/PqDwC2LbNKGtWfImNugCE+EuSAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0C
      EEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEF8ajuPw6aef
      cuutt1JbWztim2VZbN++nTvvvJN77rmHiooKHMehs7OTjRs38u1vf5uNGzfS19eHbdscPnyY
      u+++m/Xr17Np0ybi8fjn7lMCEF8a4XCYzZs3EwwG6e/vH7GtoqKCnTt38uCDD3LTTTfx1FNP
      0dvby+bNmwmFQjz22GN4vV62bNlCa2srTz31FPfccw8PP/wwFRUVHDp06HP3KQGILwXHcXjj
      jTeYM2cO+fn552xrbGykrKyMjIwMZs+eTWFhIVVVVYTDYZYsWYLX62XlypUcPXqUWCxGamoq
      gUAAj8dDVlbW//pVOhKA+FJoaGjg2LFjlJeXn7NN0zTy8vLYtWsX4XCYnp4euru76evrw+v1
      smfPHizL4uTJk3R2dpKRkcGKFSv47ne/y+23347jOMyaNetz9ytfjiuSrr+/n0cffZS8vDxe
      eOEF/vCHPxCLxQgGgxQUFAAwf/58IpEIGzZsIBAIMDg4iM/n45ZbbuGZZ55h/fr1FBcXk5KS
      QltbG9u3b+e+++4jGAzy5JNPcuDAAcrKys7ZtwQgks7tdrNu3Tq6u7uxbZuMjAzy8vLw+898
      BbVt2yxcuJBly5bR1tbGE088weTJk/H5fKxfvx7DMNi1axdVVVV0d3fj9XrJy8vDMAxmzJhB
      ZWWlBCC+nNxuN6WlpcDQuz2HDh2itLSUzMxM3nnnHbKzsykoKODnP/85HR0d9Pf3s3r1ajIz
      M9m7dy8vv/wytm1jGAZ33XUXKSkp7Nixg/vvvx+Xy0VfXx/f+c53Pnffo+7LcU3TRNM0DEO+
      FvlC5DgOvb29+Hw+PB4P4XAYt9uNz+ejq6uLSCSC3+8nIyMDwzCIRqN0dHRgWRZjx44lLW1o
      RkIsFqO9vR3btgkEAgQCATRt5GQbTdO0hAbQ8ekuXtldfepWCituuJ7Cs8btOI5Fw4F32XO4
      hexpi7hkbsnwMIjTJADxl6JpmpbAUyCTEw3NLPzqzcz83IEODr11O/ngRJBrrltE3bvbeLd6
      LJdOzeTCmUglvmwS9zao3Udrlxd9sJXW9g4ig/HPvDcbpbaim9LlXyHNl8qspXPp+6SeP2Gm
      sxBfWOKOALaLnPFjqN/3ITVmlN7BVFZ97XKC7tN3iNETT6ModahJPTWTdLOJGOCxLCzLAobO
      ER3HwTTNhC1dnD8n+no50tGWsP0VjxlLydgzkzQTF4ArjVlly5kF2FacY7tf4IOaXq6cHjh1
      Bx3DihG1GTou2TFi1tDkc13Xhy9gLMsaGi4tE2IuCK39EbbX1SRsf+UTJjE1OzR8O2EB2JaJ
      aTu4XS403cDr0bGds1/EPkJZ/RxriZKX5yHe2kRfRjZ+hv5L4OkAbNuWAC4gn31n5vzvcOR4
      rYQFYEXa2LlrL5Y3gMuM0NSeyuobUjGjvdQ3tjO+ZDwlF13Exy+/xJt5GXS19LDwqmtw//GH
      FuILS1gA7kAuy5ZfzMm2LkzHRemSbIIGtNV+TF1XFhMmgp5WyMqrvLSHB/CVZpEzRl7+4vxK
      4NugGp6UsRQWn/0eqI3uL+CvJhXhOnVUSguGSAsmblVCbUn+KIROVlFRcpcglCZXkkJpEoBQ
      mgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQWhK+
      Ht1hsC/MID7GpPo4e0KO48QJd4Q5Pf7OkxIgkOJJ/BKFMhIegDPYzmtbtnAi8yvcvmbpiG1W
      pJrfPLeX0MRMdCA0rYyFk7ISvUShkIQG4FgxKvd+ROb0BTiR+Dnb4ydPkrPsKq6Zly3DsUVC
      JC4Ax6G/s46jg1ksmhHgvU9az7lLx8kTHNlXT3eFl5ySOSwvm4nfpcOIgdqnH+7cPxOjTzL+
      Fc9+7SQsALO/jQ8/OsaCSy7H1/35c2ELltzI95aAbQ1St/d1tr3t4tqV0zFse3gw9ulB2Qkf
      rynOCzN+7pnAed2faRGNRodvJyyAjuYqPqmqpr6lCXOgl+buAQw9hfKL55HmAnBwnKG5sbrh
      Y9KCUj5+rp4BpjPGMDAM49QTMNE0bfi2GN3c7sROAnW5DHw+35nbidpxaPJSbp88dNHb11LD
      mxUtXF0+76x3gaLU7qvAKJpGUdBNU8VhzNxi/IlaoFBSUqZEGl4/ORlD41L72qrZ/lErl60o
      Y1xJLu/v+D07w4Ok5U1l5cVTkDdBxfmUlAD8wXyWBPMBi9b6ZkpKF+BzG2jBAi679oZkLEko
      Kslzgg1KLlqe3CUIpclHIYTSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlA
      KE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITS
      JAChNAlAKE0CEEqTAITSJAChNAlAKC0JAThU7X6FbR9UnzP80XFsGg5s59fPPc/b++owbZkE
      Kc6vxAbg2HTXfciBRodI78nPbqS3bie7m8Zw9devJbP1Q3ZUdyVljKZQR0IDMAfDfFTVzty5
      Ez9n9leU2opO5i4vJd2fyuxlpfQcqWcwkQsUykngoOw4jR9/SMqEi8gNdFF5zh1i9MTTKUob
      alJPzSIQbyYGeCwLy7KGHubUnODTc4PF6Jbof0fLStKc4J7jleypH2DOnDZq65vpaO2koamN
      gnHZuHUADd2KE7MZOi7ZMWKWjgbouj48GNuyrKFZwrpcv18IEj3v2dCNEbOJExaAnpLJ1OIB
      eru7iPb0MjjQT29kgDPXuX5CmX0cb42TG3JhtjXTG8zGz9Dw7NMB2LYtAVxAtDODohO0Q0a8
      dhIWQFpmIfMzC4GhQdndRguzpxRhxXqpbeigaHwxExct4qWXf0dPfjadzZ3MX7WGxM4RF6pJ
      zpzgjHyWLcgBHLqOVlDVnkHRBNDTCrlilZvWrgGmz15I7lh5+YvzKzmT4j1+Mj1+wAbvOJYt
      Kj51HQBpGXmkZSRjVUJFSR6UrZNdXJzcJQilyZWkUJoEIJQmAQilSQBCaRKAUJoEIJQmAQil
      SQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoE
      IJQmAQilSQBCaRKAUJoEIJQmAQilSQBCaRKAUJoEIJSWwCF5DvHYIP0Dg9iOhtuXQqrPPWJE
      juOY9Hb3Yp267fankeaTIRni/ElcAGYPB/d8QFPXAI5jMRA1WL5mDeNSztzFilSz6Zd7yJmQ
      gQbkzljCosnZCVuiUE/iAjBSmbnwYub6vOhYHN/9OyqO9zNuSurwXcyTLYSWXc2a+dkkeHSa
      UFTiAtBd+FNcYJu0H69if4uH+aX+EXdpP9nMkX0NhA97ySmZw/KyGfgNuUwR509CRyTFBo7z
      2uY36HanUzxxKmN8I3/P5y++kX9cDLY1SN3e19n6tsG1l0/HsKzhgcqnB2WLC0M8Hk/o/kzT
      YmBgYPh2QgPw+AtYc/PNxAb6OHHwHd6pzGX1nNOnO0Mvak3TMFx+Ji+cS8Vz9QwwnTGGMTxQ
      2TTNofskeMCyOD/OHlqdCC6Xgd9/5swjYecX8b4uauoaGTBtXG43dqyfaOzs3+RR6vbvp6E9
      gmXFOFb5CWYoG1+iFiiUlLAjgOFxE22t5sX33yHuGGQWzWDVV7Lob6th+76TXHZpGbnF2by/
      cys7eqKk5k7msuVT8CZqgUJJCQtA96Qxs2wFM8vO/lOLuvrjjJ+zAK/bQMss5PKvrk3UkoRI
      9pxgg5KLLknuEoTS5D1GoTQJQChNAhBKkwCE0pJ8ESySoaWlhXfffZeenh7GjRvHFVdcgct1
      5qXgOA61tbXs3r0b0zS54ooryMvLo7m5mffee49wOMykSZNYsmQJPp+P9vZ23nrrLXRd57LL
      LiMYDCbx2f3/yBFAMY7jsH//fjweD9OmTaOqqootW7Zg2/bwfZqamnj22WcJhUKEQiEef/xx
      2tvb2b9/P36/n5kzZ/L+++/z6quvEovFePLJJzFNk0gkwtNPP53wjzf8OeQIoBhN01i1atXw
      7XHjxrFp0yYsy0LXh34fZmVlce+99+LxeIaD6evr4+qrrx7+OcdxOHz4MPX19Xi9XtauXYvj
      OPz0pz+lsbGRiRMnJvy5fRESgILi8Tj79u3j8OHDVFVVcccdd4w4BfL5hj6A0tPTw7Zt28jL
      yyM/Px/TNNmzZw81NTUcPXqUdevWcfToUSZMmDD880VFRbS2to6aAOQUSFH9/f1YloXb7aal
      pWXENsdxaGtr45FHHiEej3PjjTcOHw1O/5xt23R2duI4zvCRA0DX9VH1aV05AijI7XZTXl5O
      eXk54XCYhx56iGnTppGeng5AJBJh48aNXHfddcyePXvEz61cuRKA6upqnn/+ea6//noOHjw4
      /HH1xsZG5s2bl/gn9QVJAIqJRqO89NJL5ObmEgwGOXToEKFQCJfLRVNTE1lZWVRWVmLbNo7j
      UFlZidfrJRQK8corr1BQUEAwGGTnzp2EQiFKSkro6elh69atxONxLMuisLAw2U/zTyYBKMbj
      8TBv3jzeeustIpEI+fn53HHHHei6zsGDB1m8eDGBQID09HRef/11YOiieM2aNZSWlrJjxw76
      +vqYPHkyK1aswOfzcdttt7F161YMw+DWW2/F6x09n+HVnNF0wob8DzEXmr3HG/ltxcGE7a+8
      ZBJXTpkOgKZpmlwEC6X9D3YIkb+9TrViAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CASE_1_T2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WXAd15nn+cvl7huWi+Vi3wiAIAFQJEFxsSnbFCXLRUlhW3J021aVo7rc
      Ff3QEzUxMTEVE/XgmJiImYeaiZin7pgYl10ay1OWLdlyS7J2ShRFcRcXAMS+7xd3B3C3XOYB
      JCSKIJkACIAg8vcC3Hvz5PflyfznWb9zBF3XdUxMtiniZjtgYrKZmAIw2daYAjDZ1pgCMMhc
      ZJrLl79gNrbA9NQEGUUDIBkLMh1duOP41FyYjp6hpbSdfSPLnjc6M8Zc5u7NsGsXL5Ja+lln
      ZmKYnsFxlmu6habGSGbvfg3hyWEuXrzI0ESIW8l1XWN0ZARtWRd0xoZHUO9+yi2PKQBDLPDb
      V/5EQVEB0WiUj99/k8HhUWbCMeZnRxicihOenWF8bJS5ZAaAYP81fv2r3xHJ6Fy+8C6//Nc/
      o2sqU+MjhOML6LrG7PQEJ//0Mv0RSESCjE5M3/YgatkFekansQuLnxPTvXz06RdMd3zKp+2j
      RMNhYpEgqazK1Pgo77z+ClPzOqHpCSaDEVQlRTSWYDYYRge+OPUOKXsBn77xO4bDEWLxBKFQ
      lM7OTjRdIzg5zkw4jpZNEonFCYbCdLV3EJ3u5P/6L68wMxsmEkuAniUSSWz8bVgHpF/84he/
      2GwntgJDnZeZmhfYtauRvitnkX1+3nr7Q1pKLVwJOTn35svkFxfy3qkv2NvcSHx6mAVFQXUE
      SMwOEg2r5DNJe1Dn6pmPcVgynLzYjx4bJa+ykQ/f/YCFmV5mKKCi0ANAZKyTqFhETWk+AAOX
      P0Etb+OJ5iLeOnWDjtNvMB6OkYnMcGUkTnJ2iILCXD74rJ3xrsuoNpX/79d/Qnf6qK0qYajz
      Mu7yZkKDHdisC/zhj59icXvpv9FOjpzkXG+QwcunsNgE/p/fvIXo9DHefZXqHaWcudBPy85y
      XvvTe9T7s7xzPc7u2uJNvCMPBrMEMIIu84O/+Xu+sauYf/3NH9Ctdup2NGATv6wcWJ0+mpqb
      UeYW37YAhTW7CHa+i+CpRhJgaHCc1rY2iuwCHZ29VLXspbwon/nZcUZn47gLq6kuci+d8+q1
      Plpa6pY+uzwe5qIJ5qJhXL5cZKubEz/8d8RHR2k5tJ/iPC8zQz2EkwpltU3kuSwE6vbw3W/t
      RwR0NUtPZzuHTrxIqcdKTfMhvn1gFwBjI2PUtz7GzlInQ9NzlNQ/xjPf3AuALy8ff0GA8vIq
      GnKy/OHTPr55sGnds30jMAVgBHWBd//bn/n8cicte/ZSWBjAKouUBIqxOHMp8DpYiEzy1p/f
      ZFfbNxEAm8tHQWExYmKBpn27KSsr5sixb3P2nT8y7ynlO985yuiFTxhNQKB2Fy0lLuKJeTLK
      oqi0VJgwOfjtX96ist3fwBfv4C/nRnn2yX0EyiqQRdh39HEuvPMXwoqVhrZvUSQlmJufB8lB
      SXH+Uvrc4goOf+Mb1JYVYnPmUOz3AgLFgQB7v/FNes98QGfMy8GmMsqK8gAoCpQgOYoI2GJc
      7Z3g8HcOMzqepNhj2cg7sG4I5kDYg+HffvP/8oOfvoT1AZ1vuv8qY0oB+xpKHtAZHwBaljPv
      v4ml6iBtDYHN9uaBsC4CiMVi+Hy+B33adSEej+N2uxHFrVEYbqW83Qq+rstdVxRlPU67Lmwl
      X2Fr+bsVfJU3xWo2xpt/+Qx/YT47drWgzM9RVFxwx2FqKsx4RKIi4AN0RnquMRKcx+svIUeb
      wV5xgELXxrjceflzomlw5RbT0liNsIK0oaEOzvcFcdtEapv2UpLvvn+iFTDe38HgVAzZ4mLf
      gVZWUzsPTgyh2Qooyncy3tfBwHQcT14xrkSEwgP7WOt7fLj7KqOheSS7j0ONRQwmbFQXee6b
      rqOznV1Nu+/6u5JO0j86QUNdLXPhCS5f78Ni99JSl0Nf3EVr9Z3P1VfZHAHoOp7cQurqqvA4
      BLoGZtHnpugPpagqK6Cnd5ScggC52gRne5NIRw9TmmthPKJx5MhhBGC4YwpNU+m4colwPE1D
      czMDndfQrT6a6wNcvtqFO7+Evbvq7uuOERZSaYrLGygPFBGfGaWzfxTZlU+lPcuNyBypaJwc
      nwt7bhnFjgwD40EcOQH27KxG16ChZR9VuRKXrg9gS7voGZ7A7ivGoszT2NxMT3s79bubkVei
      rJukUkm8+cXUVZdDYpbPO/rQsNDcVMm1KzfwFpSSZ00xOBXB7img1JllIJhAycDBg01cOneF
      hVSKpn0F6JrGaGiBI4cPIQoCPWfPowM3rp4nlMhQu7OV0a6LqNZcdteXc+XKdZx5AR7b3YB4
      D9/TySQ5BaXUVZYw2nWGzwbSWI4cYGFqkNlIjPLdjzN14wyqaMeZX06BZYH+iQiJjMKO8lku
      tfeiCQ5aa72c756luqaa+HgvcykNe14RACP9I7Qe+gY+q0h6dhBN15kY7GZ4MoSvqAJ5fpLZ
      eZXanS2MdZ4jI/s2rxconZwnGo2iaBqpVJpsOk3VzlaK83w4HHYkSaCksor6xlZK/R5AA+Fr
      7uoq6VQGLRllKrKAw+HAIokIkgWH3YYkCjyoBs7eA4eR0lHOXPiCZDKJjsDY+ChKBna3HaAg
      J4e9+/chaBn6enrRBZG5udsHiwRRRABSyQV0JMbHR6ny2+gbHicjulf18APUNO2lyC1y8cwZ
      ujt6mNdByaaYHOqnqvUwLTtrmAzPc+TwEfRMHEWT2L1nH5W5LmbGhih/7Bu07tqBBIAOCLeX
      cHqGZFJBSy8wFQzjdDqxyhKIMk6HHUkSb6a7Ozta2sizKZw5fY6iigrqmh6jNM/JQjqDKKQY
      GQth9xVwsG0/qElmYmkOHz5EWYGPVDKJpkN0aoy5dIa8sh1U+1T0nBoeb9uL82aRp+ogfU2F
      yeQCiCKjY6PYHU6sFgug47h5DZsmAJ8/QF1dHU7roguibMVht6KoOg6bhfjMLIrFwexoFzOR
      xS49vz3DhUuX6RoYBUDTFkjMaTjsVlRFw2q1komHiaVUbDYbkWDwgQ3j93e1E5lLI4ki0XAE
      m8N51zee35+PbLFRkJ938xuNge4OLl26QmFpOZFwDIfTgYiOu6SesfYLlFWuvrdnariP8dko
      gihQUFaIoAjk5OVRGChhsP0i3f2j5DhELl6+RFq9vdB35uXQ98UFevqHUQFBlCh0i5y/+MWX
      0zeUBWILGg6HDU3TkWULmfk48WQKi8VOJBxCXX4uxRJjAz1MhxOIoohgcxEZvsFUMEQimcHh
      sKNr2m3H20hx+cpVpkNzRMIRbA4HFlkARFxOB9i8JCZ6aO+8wcLN6R/llcVcPnuWL650oqAD
      GpFIAqfTgaBrCJKEJGiEwhEkyYKSml+fXqBQKER+fv7dD9B1FFVDliVAR1G0xYdJlBDQSKfT
      iJIFiyyRSacRZSsWWUTXNdKpNKJsQRYXj1cyaXRBRJZkVCWDhojNKpNJpxEkC1bLvWt54XCY
      nJyc+/YCKdkMGUXFarUhopHOKMiyvPjGEUU0VUWSJDRt8VpS6QyyxYpFltBUhXQ6gyhbsFot
      aEqWjLJ4/dmFOB29o+zd24Ik3L8IWC5vNVUhnckiyYt5ls2kb+aDhWwmjS7IWGWRdDqNbLUh
      oiOIIrqmIYjizWNELLIFURTQdZ10KoUoW5AEEGWJbPrLfNbULKouYLNayKRTIFmwyjJfd/+r
      vt7ycTFPRDKpNIJsATWLJohIkoyAjiSKqJqGIEA6nUG2WJBFYTE/ZRlJEtERkUQBJZtBUXUs
      FhlJkkDXyWbSKLqA3Sqj6QJoCllVR5YlBHQyWRWb3YaazaBq69QNOjIygsu1Qa3TNTI/P4/T
      6UQw8PCtB6mFBKpox2U31nSdm5vD7X6wjej1Yiv4ui6NYJfLde8S4CFCEARDJcC6sYp82ip5
      Cw+/r2sSQHx2kuHJWUCiascOPAbfYiYmDwtreu05vXlUV1ejp2JkHuVJ4yaPLGsqAWSrDaeQ
      JSPnkOeyoKoquq6jqirZ7D0iMx4ibvm6VaZCbMW8fZhZWxtA1xnu66OibicCLLbEb/61WLZG
      deiWr1tFAFsxbx9m1nTXdXQyggO/2/ag/DEx2VDWVAIIgkhDY8OD8sXEZMPZnLlAJibrxNzc
      HH/4wx9wu90899xzWK2LERqXL1/m4sWLvPDCC7z66qsAvPjii6YATB4tPvvsM2w2G4FAAFle
      fLxTqRR9fX3YbDaCwSCNjY2IosjY2JgZEmnyaBEKhTh06BCJRILh4WF0XefXv/41LpeL7u5u
      0uk0/f399Pb2kpuba5YAJo8Wra2tnD9/HgCr1Uo4HOaFF14glUrR39/P3NwchYWFCILA8PCw
      KQCTR4umpiYcDgeSJFFUVEQ4HKawsBCAn/zkJ+Tm5tLX1wdAXV2dKQCTRwtBEKipqVn6fOvh
      hy/nJdXX1y99ZwrA5JEkOzGBGovd9zhTACaPJPE3/sz8J6fue5zZC2SyrTEFYLKtMQVgsq0x
      BWCyrTEFYLKtMQVgsq1ZmwB0fWlnk/utC2Ni8jCyJgFkElO0D8wgopkCMNmSrGkgbLynn6Rq
      Y2AgjjvXjyToZkzwOrMV83Yz0L620tzdWJMArDYrNZV7yFsYZ2o2iq98cSXerRALegszJnj9
      2Exfjd7PNd31QOMuxr84w/WBaYoLctZyKhOTTWFNJYBocXHkiScelC8mJhvO1ij3TUzWCVMA
      JtsaUwAm2xpTACbbGlMAJtsaUwAm2xpTACbbGlMAJtsaUwAm2xpzVQiTh5I33niDWCzG/v37
      aWpqQtd1PvroIyYnJ3nuueeIxWKcOnWKxsZG/H4/77//Pn6/n7/6q79a0fwjUwAmDyUTExM8
      /fTTVFRUAIvb2SaTSZ566ilOnz7NzMwMbW1tBAIBzp49S2trKzt27Fjx5DuzCmTyUHLkyBH6
      +vp4++23AUgkEhQVFeH1elFVlfHxcWKxGK+//jr79+9HVVX+7d/+jUQisSI7pgBMHjoUZXET
      8j179jA3NwcsLmvY19fH6OgoTqeToqIiGhsbsVqtRCIRWltbcbvdK44/MKtAJg8dkiQxPz9P
      Z2cnzz77LF1dXdTU1NDa2kp3dzff/e532b9/P++99x7f+ta38Hg8vPHGG+zZs4fc3NwV2VqX
      neJDodBDv0HyLcLh8OZulL1CtlLebqavof/yXw0tjbimEkDLhPjgo2t4/Tm0tLTgtEprOZ2J
      yW3ouk5WNbYBtSAIWKSVP39rEkByZoyU1U19SRkO8+E3ecAE5+f4P05/bOjY2rx8/uOBwyu2
      cU8BnD9/HlEU2b9//7K/O0t2cTw/y2DnVcZsTkpy7GZQ/DqzFfN2tSiKYvhYXddvs7XmoPhz
      58+hqRr3aiLEZ6eJqzJZVUMWBXOj7A1gK+btarm1yZ0RBEG4zdaqg+IjkQjj4+N8/vnn903s
      9RdBao7C6p0U5zoNO2ti8rBwh8QSiQShUIjq6mpyc3MRBOGuiQVRpry6dl0dNDFZT+4QQEVF
      BRUVFTz22GOb4Y+JyYaybEVJ1zQUxVj3k4nJVmbZVkZ2Icqf/vQ6aTmHbz5xjMriXO5REzIx
      2bIsWwJY3bk8/d3vUeLS+NXLr5A2CwOTR5RlS4B0PMSHJz+mevch/sdjAWzmjCGTVaLrOiMj
      I5SVlSFJErquMzY2xsLCAnV1dUxMTBAKhSgpKSEejzM3N4fdbqehoWFD/Fu2BJAtEqm5OBPB
      MB2XzpM1NqZgYnIHY2Nj/PM//zMLCwsAxONxbty4QXd3N1evXuX9999HFEUEQUAQBHRd5733
      3rvn+NODZFkBKMk4trwy5Mws3f1DGBxUMzG5jUwmw+eff84TX1k/1ufzcezYMebm5sjPz0cQ
      BM6dO0cwGKS2thaXy8XBgwc3bGBy+TZAbgV7agqIzMZ4/Nj3sJnTfExWQSQSYWJigk8//ZRz
      584BkE6n+c1vfsPx48epqKjgb/7mb/i7v/s7zp49i6ZpXLx4kX379m2Yj3fU7udnBvi/X36V
      9M1pGLNJqHrpR2Y7wGTFFBUV8Q//8A988MEHHDp0iI6ODmRZZnJykr/85S8cPnyYCxcukEgk
      2LdvH9PT0+zYsWNpSs1GcMdj7Sqs4b//H/4nwtOjzAsePDYRc6KnyVp48sknAdi1axcA//iP
      /7j0W11d3W3HBgKBjXOMu1SBMvFJ3nr3Q65399B+6SwpsxvU5BFl2YqNKMlIAgx2XEC05nPg
      2xvtlsmjRObKb1Fnbhg61vb43yP6ytbZoy9ZVgApRaAsUIic0Pj2k09i3RozhU0eUtSRsyj9
      Hxk61tryI9hAAdzxaGupMK/+/s/Y88uoLnLx3genUc0dUE0eUe4oAWLjPTR96zkO7CgAdNIf
      /YWUAq67xTVoaQaGZqiqKTfXWHkE0XWd8+fPEwwG+c53voPT6SQcDnPy5Ek0TaO1tZWenh6S
      ySSlpaU89thjvP/++zz++OMrCmjZLO7w0Or289nLv+Tjmw1fZ0ElbUfvklrX6b/RSc/kHBWm
      AB5JNE0jPz+fQCDA22+/zQsvvEBOTg7f+973uH79OvPz8zz55JNEIhHOnTvHa6+9xtNPP81r
      r73G888/v9nu35c7u0GL6vjv/tPPudw3w+N7dt4zcSo+zbycR6FnMRZTVVUzJnid2Yy8TSQS
      fPjhhzz99NNLtkVRpK+vj+9///tIksSVK1doa2tbWr8zm82SSCTw+/2G43NhMQ5Yu2lj02KC
      BUmi8+yHJOJh/Pl+mnc2IC3zfEyOT5KIpRkdGCCvqp7qosW9grdi3OpWEcBG562u6zQ3NxMI
      BDh58iTNzc0AdHV1UVdXh8PhIJ1Ok0gkKCkp4fvf/z7t7e1YLBacTicWiwVFFDEqAVmWkW5e
      30bEBC9vQbRQUVrAxc8/Z9/R43dNXN30GNVAf34+FUXmRtmPIplMhldffRVFUWhra6Ozs5P6
      +nrC4fDSlIX+/n6eeOIJBEFgaGiIrq4u9u/fj8Ph2GTv78+yAtAzCSbnRE5870m+aO9DPdDK
      vQaDa+t3rJN7JpuNzWbjpZdeuuP7w4e/XIOnqalp6f/du3eze/duYHFluIedu4ZEipIFu8OB
      iI7ZC2ryqHJHCaDrOhZvgCcP7aZ7aJpjz5izQU1gOpHg9c5rho6tyc3n6frGdfbowXDnsijj
      HYwLFXgSM9TsOUKRZzPcMnnYSKkKQ5GwoWPdVus6e/PguEMASipB11AnrmgHJHKYL3BRW1W5
      bC+QiclW547H2lVYi21hgvG4SGTkBkOjk4a7sExMthp3CMDmLeTp7z5D685aJF0hND3BdDhu
      NoRNHknu0gukMjk+RiQxT3FpGec+fIt4ZqNdMzFZf+461JbjL8aeL2Gz2Tnx/R+yRQZ2TUxW
      xLICUBZCDE0EEa02bNEE4t4WRHNlOJNHkGWrQJJspaSqllRogulwDM1sAJg8oixbAsieIvbu
      tLG3uQm3y8UWmSdmYrJi7hwJVpP87l9/jer0I2TiuMof47lv7QWzCmTyCHLnSPBYJ0X7T/Dt
      lnJ0Xefku2+SUvfiePiDe0zuQUdHB+fPn0fXdX72s58hiiKnTp2it7eXsrIy9u3bx+uvv47N
      ZuPFF1/ktddeI5lMcvToURobt8a0htVwZwmAyKd/fpkL7yx2+2RlNwePbbhfJg+Y+vp6du7c
      ySuvvIKiKFgsFsbHx/nbv/1bXnnlFS5evMizzz7LwMAAMzMz/PSnP+XSpUvMzs5utuvryh0C
      8Fbs4Z/+59bbvrvb3gCakmZkeATRkUN5oMDcQ+AhJpvN8vvf/56DBw9ivTlXJxAI8PLLLzM4
      OEhubi52ux2fz0cqleL8+fN0dHRw4MCBTfZ8fbmjeSsIAqIoLq3YOzUxftepENnkPFZ3Lomp
      AcbDc+vsqslaeOeddygtLUXTNDKZDNFolPLyclpaWmhqaqKysnJpDU+fz4eu6zQ0NDA4OLjZ
      rq8r963ZDw8PUBAoZ7nlGq3uXGL9ZwnOi1R5HGZM8Aaw2rxtbW1lenqaWCxGJpMhmUzicrkI
      hUJ873vfw2q1Iooie/bsIS8vj2AwSDab5dixY2SzWdQVxOdq2mJ87i1ft1xMsJqM8urvXiWa
      VNE0jYSQx/HDzXd0BAmCQGPr49g7v2A6lKAmYMYErzerzdva2lpqa7/c0dPtdgNQXFy89N1X
      I7taWlput7uC+FxRXIzPveXrlosJzsyFKdh5iB8+1sDnpz4iE+4hlGzG/7UQz9jUCB2D42ga
      7Ko29wneCqjBbvS0seqqVLwLQbavs0eby7ICsOcUEe76Lb/ruYRmL2ZnSRHOZWIcfMUVHC6u
      WG8fTR4g6Y//N9Sxi4aOdf3sTYTcqvV1aJNZvgRIJrH7/LTueZyasiJkWTLHwUweSZatKNm8
      fo49cYShKyf5X//P/7q0WYaJyaPGXdsA/+2N18naCvnrnzxtBsWbPLIsv0uk08t3n/she3YU
      cfXKlS2xS2QymWR4eJhkMgksdouFQiGGhobIZrPMz88zNDREIpFA13UmJyeZmZnZZK9NNps7
      SoBUZIxX/vAWksXOTCTOf/gPf4tlC/QQnj59GkmSOH36ND/+8Y9RVZX29nYUReHChQvU1dUR
      i8V45513OH78OD09PUxMTHDkyBFycrbOqnbd3d309PSQm5vLc889BywOck1NTVFWVkZjYyNv
      vfUWZWVlNDU1cfr0aaanp3n++eepr6/fZO8fPu4cCRZl3C4nAjqZbHbxkC3QAn7yyScpLCwk
      Pz8fWOxDrqioYHJyksrKSmprawkGgwQCAWpqajh69ChWqxWnc2t139bX1/PSSy8Rj8fRNA1B
      EHjmmWd49tlnmZmZ4bPPPuPnP/85APn5+bz00ktUV1dTUWH21i3HnUHxvmJ+9O9/yo///b/j
      p88/yednz5LdAnuEnTlzhtnZWZ566imEm5OSSkpKOHjwIH19fbhcLo4ePcr09DSzs7P86U9/
      4sSJE0sDQluFeDzOyy+/zLFjx5Z2UxwbG+ONN94gPz9/cSBJknC5XGSzWYLBIB6PB5vNtsme
      P5wsW7kRBAGLzU5VQwsnnvr2Q79LpKqqnDx5kpGRET799FOGh4eZnp7mtdde4/Tp0+Tm5vLB
      Bx/wzjvvIMsyFy5cIBKJ8PbbbxOPxzfb/RXR39/PkSNHkCSJdDpNMplkZmaGb3/72wwPD+P1
      erl48SLDw8N4PB5OnTrF0aNHl14KJrezLrP8dV3n3LlzTExM8OyzzyLLMrquc+bMGWRZ5sCB
      A1y7do3R0VGeeeYZstks7777LrW1tUsLq64ESZL4p3/6pzu+//GPf3zftOGwsdXOHhZKSkoY
      Hx8nkUhgt9tRVRWfz8fY2BgvvvgiOTk5XLhwgRMnTmCxWPjmN7+5JVZp3izWRQCJRAKv10tR
      UREfffQRTz31FH19faRSKVKpFBcuXGB6enqpwZbJZHjiiSe2zPyhzaS4uHhpv91b5OXl3TbP
      5/HHH1/6v6ioaMN824qsiwC8Xi8ej4e3336bEydOABAMBtm5cyeZTIbOzk6i0SihUIiZmRkm
      JydJJpOoqsrPfvazVdtVNJW/dBvbjtNltfGd2q25rPtCKstkOGHoWI/TRmGOa5092rqsiwDm
      5ub4/PPP+cEPfrDUyHS5XMzMzJBKpaitraW5uZmxsTEKCgqQJIkXXniB119/HV3XV11fVTWd
      08PG5q/7na4tK4Abw7P8L//6iaFjn9xXzX/+4eP3P3Cbsi49/KFQiEgkwh//+EeGhoZob2+n
      oaGB3t5exsfHqays5PLlywwODvLUU0/xxBNP8Oqrr1JdXW021kw2lHUpASorK9m7d+8d37/4
      4otL/391B8GamhpqamrWwxUTk3vyUK718PK7V/nwkrGqzH/+4QH2N5Sss0cmjyprEkA6HuRS
      ey+KCq372/A5vuzF0eZnSf7x7w2dR8zfgeOZ/33pczKdJTqXMpQ2q2yBUTqTh5Y1CUB25XHo
      8GGGb1xhbiFzmwDQFLRgt7ETSVtnRxGTR4s1CUAUBbqvnEf3lVGZ57wtKH4jAprh9iDxrLoC
      m9weuL1VYoJVVUVdwXXeClC/hb6ChV4VRUG4mXZbBcUbJTJ4nVlyqLGLZBQNm2VxzoQkSciy
      TNrgeVYb0HzL1q202gp6kARuD9zeKgKQJAlJWnmA+i2yK1jmW5ZlxJtpt1VQvFGchVWUS1Gy
      mSyabi4hbbL1WJMA7G4flW7fg/LFxGTD2RrlvonJOmEKwGRbYwrAZFtjCsBkW2MKwGRbYwrA
      ZFtjCsBkW2MKwGRbYwrAZFtjCsBkW2MKwGRbYwrAZFtjCsBkW2MKwGRbsyYB6LrOXHiK2bix
      +F0Tk4eNNQlAXYhyo/0qI6H5B+WPicmGssag+FxaGmu4sbD42YwJXn/MmODl2ZSY4K9za716
      MyZ4/TBjgpdntc/Qmu76fHiSS12jzAx2Mh1dWMupTEw2hTWVAK68AIePBh6ULyYmG87WKPdN
      TNYJUwAm2xpTACbbGlMAJtsaUwAm2xpTACbbGlMAJtsaUwAm2xpTACbbGlMALE4wSyaT6F9Z
      4j2bzS59p6oqCwsLKIqCrutLG37rq1wSXtd1Tp8+zenTp5fOoaoqH374IRcvXkTXdXRd5+OP
      P2ZhYXGKSXt7OyMjI2u/WJPbeCg3ydtoXn75ZQRBYPfu3Rw4cIBsNsu//Mu/IEkShw4dYnJy
      klAoRDKZ5OjRo5w6dYri4mKOHz++NAFwJfT09JDNZhEEgZ6eHhoaGrh27Rput5uhoSGqq6uZ
      nJzk9OnT7Ny5k2w2y3vvvcf+/fvv2CXeZG2sqQTIzs3w0Uef8Mmnn7OQNT7l9WHD7/fz0ksv
      MT4+DsDU1BTNzc385Cc/ob+/n2PHjnH48GE8Hg+ffPIJdrudTCaz6hJgdnaWxsZGGhsbCQaD
      AESjUerq6mhubqavr4/e3l727duHruucPHmS48ePm3sorwNrEsB43yitR4/SVPE+udgAABBL
      SURBVOFnNjL3oHzacDRNW6p2wOJU2luxDQAdHR188cUXnDhxAkEQOHHiBB6PZ0kwK8XlcjE9
      Pc309DRutxsAh8NBMBhkdHQURVEIhUKcPHmSzz77jJmZGd5//31OnTpFJpN5MBdtAqyxCqTp
      ApIIiCK6vnVLgFgsxi9/+UsOHjxIV1cXFRUVdHV1ce3aNY4fP85vf/tbqqur+eSTTzh8+DC/
      +tWvsNlstLW1rcre7t27+fOf/4yu6zz//PNcv36dlpYW3nzzTRwOB8eOHePIkSN0dHRQXl6O
      1+tldnaWSCSC1WoFTBE8KNYkgNLqQs58dh4ZhT0Hqh6QSxvPX//1X98RQPHzn/986f9f/OIX
      t/1WX1+/JnuyLPODH/xg6XNzczMAP/rRj2477qv1fb/fj9/vJxQKrcm2ye2sSQBWXylH2vLR
      RQs268obgyYmm82aBCAIAla7Y+nzrXq0oihkRZWsNcfQeSTZfVvd1iKCx25MUIKuLaXNqioO
      g6FwNkEgk8ksxa0OTUUZmooZSttY4SeQ7176/MuL5ww1iB0WCz/Zs2/ps9L7Hplrvzdk09ry
      I+QdxxfjZHXVcP5YJeG2vM1KLlSD9yWjaIg302qKYjhvZR0ymQyKopDJZMiKThSDNrOqjnrT
      proCmxZuv07FYkF1u++RYhFBX21XxjLcakxOTU3h8XiWPUbX9bv2Zqiqes9uxdWmvVe6RCKB
      2+2+6+/rYVPTNARBWJXNeDyO1+vdMF9v+Xu3GNv18HUt/t4vHXBb2gc6DnArk+x2+10v/F4o
      irKiQOgHkVZRFDwez6qC4ldrU1VVRFFcVbdmNpvd0Ly9NRC4mrSr9RXWdj9Xkm5DB8J0XWMu
      HieraljtLtxO222/r2ZQ6UGk3Wib9xKbqmSJxxPoCLi9Xqzyg7muu/qq66RTC8wn0wiijC/H
      e0ff+HrkbSa1wNxCCkGQ8OX6HpjNu6dTSSRSuN3O9SsB7sdk1zWmBBdeWcCTK90hgOXfiAoD
      3X2kl9azkalpqMX2tYfobm/T2Hgf10ajuKwivoJSasuLDHiqMNw3wEJWvflZorKuBqfl9uy6
      a7VqZpirfdM47TLuvGJ2VJUgGEgHKpcvXCCvoBAdEZvLbUAAOjPjI4TiX67KUVhaSb7XachX
      TZ3n/LmrBMqKkGQ73hyvoXQAYz1XGY2p2CQoLq+jpMDo2z7F+c8vUVweQBCteJYRwN3sTg90
      0DebxiGDv6SaiuJcw/4mQlP09sZIp3X2HdyLVRA2TgDp5BzJzAKCs5DcXBs2h+3+iYDFB76R
      iaFepqMLiMLKmiyakqWwoo5qvxNBNPpWkamsq2d6dICJUBxJsADGqyu6qpBXUkldSS6C4aqV
      RjwaYyGVoSo3FxEBi2QkrUBhaSVO5zS9g+OIkoTRHNLULJFIHE0QyMnNRRTlFVwlqIpOZV0j
      fpeMaHCtIl1TiEZiKEBObi6CIK1oNFZTFEprGijxWhBXVEpoJBLzSLIFv8ezdJ0bNhkuk0qC
      uwiPkCQajTKfXMlgTpKRiQiZpIZNS5FWjIsgk0wzPty7OJlscnYlHjM4Oks2qeC2KMynjK9S
      lk1nmBgdoL29ncGxGYOpdOYTCUrLy4hHo0SjMbKq8cHFwZ5B1FSWknIP49PG1mjSNYVEPElp
      aSGxaJR4fM6weADSC3MM9HXR3t7OTNjYTAAdjVh0jrLyALFolFgsYXjRLID0fJKRwW7a29uZ
      CMZXkFLC4bBhkUSikdjSdW6YADy5BXiYZ3QmxMzEKO3tV+kdmTaY2oYv14vXkWUylkJegdc2
      pwVJduD1enHarSvwWMaX6yXXIzAanMOyAqNWuwWLvNgR4DJc0kkEysuJzYwTCoUY6u/h6hdf
      EJ7P3j8pkFeYh7/Ix432UVxOy/0TAJLFQUVVgJH+fkKhWbpudHD5SofhB9Jqt2Kzu/B6vdis
      xkoAUbRSVVvO2E2b3V2dXL58HcXgko02pwWLxYnX68VhW0kFRmN+fp75hSSevFxulR0bOh16
      IZaiYc9eHn98D26Hl/DkpMGUOpIo07injZqyAoQVFNS2nGIKXSKZdJpM1vhbHEASJep276O+
      qnhFGWXx+Cny2chk0qQzxh7gRTQUHOxva2NXXTler4OJMYMjv7qAv3wHB1t3IK2gR0vXM7hz
      ymlrO0CRz4eUnMPoUsc5RWW4JJV0KrWi0goy2NwB2toOUJrjw6aliRtM7y4ow2fVSKdSZJSV
      2JQoKy/DapHx5nzZ5thQAZTv2sn49UtcutJDWWUpJeUlBlOqzEwH0XSIzc6SXsFiqxaHm5KS
      EoryPUxOraQKpBKcnkHVIB4OkVxqEBuwaXMSKCkhUJjH5KTRUg5AZkdVARcvXWI0mqXYn0eg
      JM9QymgoSCqrkUkniMSML1MpSj7yPGkuXb6EnFeEvzTA/YePFnF6cigpKcHv0pmYXckK4W4C
      frh4+RKaz09+URE+Q+0dsLu8lJSUUOiVmQwaG7hcJMPVa3007trFyPWrJG9+u2GN4Mj0DIJN
      xJuzOCIoijKlRcZGB8HKYy21XLl0CX9lPT6L8caPmk0Ti8fRlOSKSg6wsG/vTq5evkBucRWF
      HqNVGVCVDPF4HE3LIApG3zEKM9NRNFXA5/EAInZfIW6bsepM457H6Oq8jmrLYU9DoaE02VSC
      RFJFkJx43CBZREorKgznUiadJB6fR8mqiKqxF4SqLBCJptEFO163DUGUKS4vx+gdzWZSxOMJ
      1IyCuIKVrkHCZtUZHRkhK1mWHvwHOhJ8i1AoRH5+/m3fqYqCDl+ZciwhGVJ9hmBwjvR8lIWM
      wmIPTdUd3aB3Q1WypNKLDW6b3YH8NZvhcJicnJyv9c1nCQYTKMk4iVQGkCmvrsRhUHiamiWZ
      WrRptTkMth90lKwKwpd5JMky4te69e7MW51QMIRA5uaUdAF/oIw8j4P7oWsa6s3Re1jsQpRk
      4z1B2cytaqWAw+kw4OviWJCiaLDUDBWQLcZtKtnMzWqlgN3hQFrBatdKJkV8boGFcIy82iqc
      G9kNGp0ZY2B8hqmJKQpLAhQEqqgpKzCQUiY310lI0agpyyEWCmFUsuHJSUSXjanxaXTAnVtI
      eXH+fdMt2nQRUlVqSsqYi0bQDL5tolNT4LYzNTqJDji9+VSUFhq4wSqD3R1Ek3EmJ5IESvzs
      2LWLHOf9Sx5fbg7R2RCVNTWIygLheWNvYyU7T/u1LsIzM0h5+ficOexubcRImROcnESUYWY2
      CkB+cTmFufevPOlams4r7UQiIVS7hxx3Ds17d2Gke2J2chLJJjI1HQYgt6CEYr/PQEqdbCaL
      jojb7WbmRg/O2iqcbGAVKL+kivySCi6dvURrW9sKDItEpoc5/Xkf9Q0VzIxPs+8738JuoPSw
      u+zMhGPYHYtvQ5vFqFWB+Ow4p0+3U99QTXh6hsbHj+Ay0OtgdzuYmo18adNqrAoDMjt2t6Lr
      YS6cC9PWVmfY12wyxtnTpwk01COlI+BppCj//g+jxebhsbY2Rq5ewbqjiWKn8V4yq1Ukkkji
      uHmdFoMj1qLkoLWtjaneTjK55VT4l58zthw2u0woNv+lTcP3M0tvZ+dSFEVWtlF18/8NbAOM
      MTI1y1RwGvHqVfILy6gIGHkbQ44/QFOTTEVlMTvqG7AZrIpIsoXE2CCUNeCXU/QPjVOYb+SN
      AZ68IpqaVCoqS6irb8Bu8EEWZZnk7ARJT4ASj0T/wDBFBbn3T4jKYHc3sWSMmeACV6+mqK6v
      x+u4/0NpdXhpbGqioLICiyBid9gN+apk5ui+0U9wchI5qxJy+mhoqjP0UMgWG9MD1/E3NmNP
      TjEwZmXfzvtXuzQ1SVd7D+HZaZTgHNFJHzubGwyVOrLFyuzgVTz1zXgyIQZGguQ3uwyktNK0
      Z8/y5zSQ+oHgzS+iMaeAxsadAIZHDiFDLK7icQpMTEwAMhW1ldgMTCSzOd1UVJXSE0sh5goI
      hhukWWKxNDluy02bEmVVxtoAVruL8ooSOifTiD7nCmyKlFXXUaLr7FzMott2PLk7OtFIjLyC
      HGYmJgDwF5eRa6ANIFmc1DU2UtfYuPiFIBhujLq8OZSW+ImnFqcsf73+fzcE0UZtYyO1NN76
      xvBD6HD7KC8vYmohg9cmGLZ5LzZMAJJsYQU7+3wFGV+Og0wmS3XZYpegtIIL95bWUTB/g8i8
      jcb6qhXYdDGbyVJdXbZo02A3HYCroIKSRA+z8RSNjXUGG3gCFutKBuq+xJfjIzI7S3lVNbKw
      2MFgyKIgYrMZ7936OiU7mpjruMGc20tjrZE5Vmu3WVizk3hHBwnJS0Nd6arPc4stsC6QiMVi
      ZWq4i9HpEInE/IqGzsNDXfQMTWP3uOnp7jeYanG/qeB4L0MTQRKJedQVdJbFJwfoHppAsrro
      6+5Z0fSClSMgWyxk5oJ09gyRSCTIKMbHLNbCyI1rDA3N4A/Yab8xtiE2J7qv0zswQ26xixtd
      w2s+3xYQAIBOYaCUzFyUYDCEsoKHUbJYkWUYHx5Gl402SBfxF5eiJOMEg7NkVeM2RcmCRRaY
      GhtBETamkHXm+HFKKsFgkIX0SkafV49stSPoWQZ6h7G77l/lejA2bciiymDfMLLdWFvnnud7
      AD6tMxmuXumjZU8TAjq97dfJqjo2A9LVdQ1PoJq9Dh/JrE6+31ijG7JcvdJDy55dlADDPZ0s
      ZBRDbQBd13H5y9jT4mI+pZLn9xu0uVp0Oq9fo7aphcaCEtKxEfqCC4bGAdZkVdMI1DTgyCkg
      K8gU5BsbsV6rTX9VPfu9+WR0Cf8DsLkFBKARj8VRNR1J0JmfM14dGb5+lqsTSYpy3YiCwFxa
      ZUelkU39dBKxOKqmIQkCyfk5HAbHASa7L3GuP0LA70UUBKILWRprywylXS3JRIK0omIVJTKp
      BTLZtb8Z78cXp98jqDjIcTkQBFB0mbJCYz1sq6Xz/EmGEyL5XheCAClFoKrE6EttebaAAOzs
      qi/mwrmzAOQVV+I12P9b2XwQi2+AcGwBUbbgcRvpMgOw0txUzoVz5wDwFpRR4Db2UJU07OOQ
      a5BgZA5BkvF5jNpcLQIte5q58sUFFECyedm3x9hUiLWw58gxhgf6SSTTyBYbLgMDdmtlZ9sT
      uIf6ic2nkC02PO61l3JbQACQF6jiUKBqxekEBPwFhWTVaULhCLH4PMX5xqKWfAVlHCpYxZtb
      EMjzF5JWdEKhMNH4HIFCI+MAq8fi9NF28NC62vg6oihTUFiINj1NOBojMZ8m1+BLYvU2JQoK
      C1GnZwiFo8TnkndEvq2ULSGA1TLedZkz3ROUBorJ8XpwGhhUWisz/df5+OoAJYEAeTkeXAYH
      pbYa7Wc/oj+cpbioCK/Hi30D1oXquXyajokEgeIifB4vDoMxCPdiwybDbQZKJsVC6svIM9lq
      w2m/vahefjLcGmxm0ywk00ufJYsNp8O2onmo9+Jhydt0aoF05sv4Cqvdif1rD+SD9jWTTpL6
      Sg+X1ebAbnC27N14pEsA2WrHa93YN7BsseG1rH99eLOx2Z3YNrhws9ocWG0Ptndri4wDmJis
      D6YATLY1pgBMtjX/P3mXZcV1Qu7nAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CASE_1_T3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CASE_1_T4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CASE_1_T5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CASE_2_T1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CASE_2_T2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CASE_2_T3' width='192'>
      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
      AUYwmQnuLyOXBmFpUgMMA38+XktLV9dQF+OKbioaTV7KyH2cWgIwDNS2BDh1rm2oi3FFFdk5
      EoCR7vw4gIkZNTEBFAVFUVBQUJTz4+lm1ARFPb984NVbE9ME04xioqD2byfihwQAINLF53s2
      8+5Hxwj0mDg8PqbeMpcbJxbi1kxaTn/Ay/+xk1HzbuP2RVNJt/ef5KZJZ0MN76xbywHXTO76
      4feZkOsc2v8X8Z1IAICuLzbz5iEXt6/6F8rSbYTOHGTT5h0cTBvFDcWjQEshv6QMh7OVppY+
      0rITUADT7KM92ALJ4xmbL6Mu8UhGgYBg/RlSJt7AmEwnNtWBt3AsFZlRgqFeov13SVypqbhU
      O+eaA0T6l0X7egk2NWAvKmaUHMm4JP9sgKf4OtQTn3Iq2Es0qtPZcIKTvSlkeZ2oF5r0ian4
      PBrhjhbae88noC/cQmODRlHhyO0kjnTSBAKSim7ipoYd7Fz/R941QU3wUDB+CmOy3V8FAI2M
      3AS+ONxBRyhMeqKT3kAdjcnXMSW5lzMX/d6Fefq5bNlgT2QO57n7+/r6RvTHNSQAgNF+gkPH
      eymefguZSSq9bV9y+NQpmgqzSXZ89RCZIz2PzPA+moLn8GU4afy8ltQxs0nk6Nd+8/IZmiOR
      CHa7/YqjRMN55Mhut4/oSbUkAHRxYNMHJN9wL9PKXNgVMAsLSO55g22HGyi4ufCrVe2plPh0
      PmhqZ1x+D5+dLmHaogTwX/qLiqJ87cuMkUgEVVWv+FzOcA6Aqqoj+iuT0gfAIKobRHRjoMNr
      mga6bhAxLn+LSiW9uATd30DgwG6axk7GN3LPDUuQGoAUxs4cxye73mZ393WkJihEQn5qTiUy
      fk42dttlV2dPIRWJh3l3f4DKv88emiKLq0YCALjH3spy+34+PvYFx8JRHMkZVMybx5i8UdiU
      KM6kLApLVM7PrplE0aRi6rRSxvVPtGBPzqC4IIHUJDmc8UbeB4iRb3of4L/37By2zwL9ZMo0
      xmWOzJpOpkYUlicBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCW
      JgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYB
      EJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCW
      JgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYBEJYmARCWJgEQliYB
      EJYmARCWZh/qAgy9Lmq2vsP+xp6v/Zfc62/jlutG0XPuc3ZtqcU1fgpTKgtIUi6sYdLb3sTh
      PR9wylbKzOsnkufRYlp68beRAOAgo6yCKbn6V4uiQQ6/f5BuvQ8Tk3BPkIYTjSSn1REYnU+S
      uz8BpkGotZ5TR8/g9yVxrnu8BCDOSADQSCssJ+2iJbp/HwfyxzAuJwW7Aqh20rOzMGwRmhqD
      FLq9KICp9xJqbaAvuwxfkhzKeCR9gMuYRpBjhxrJ9PnI9Dih/2KvejLJT0wg3NpIyDABiIQ7
      aT7biq+84HxQRNz5fwvHqvzEEnnkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CASE_2_T4' width='192'>
      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
      Mm5MndHCXzYfccm9NWolry0e7/gsb4TJuB020c6F3FKX3Funadrl5Y0wmU6NLACZTo0sAJlO
      jSwAmU6NLACZTo0sAJlOjSwAmU6NLACZTo0sAJlOjSwAmU6NLACZTo0sAJlOjSwAmU6NLACZ
      To0sAJlOjSwAmU6NLACZTo0sAJlOjSwAmU6NLACZTo0sAJlOjSwAmU6NLACZTo0sAJlOjSwA
      mU6NLACZTo0sAJlOjSwAmU6NLACZTo0sAJlOjSwAmU6NLACZTk27CsBuMZKTdZmc/FJsdgm7
      xUhlrREAq6mWssra9myOjEx7CsDOxZNHKDXaKb2awYW8Mqy1pWTeKEESzVw8fYIyk+sOhJOR
      aYn2E4CtklKjH4Pj+zEsoR+l+UU/nn8oUZp7kVqPSGJDfdutOTIy0J4CsJqQPH1RKwSUek90
      FhsikHvuKHtPXadvv2gXnogrI9My7ScAlRaMtdgkCXu9iXqVEiUQFT+a8QNDyczMRXTdweQy
      Mi3SfgJQBxCgusXlq3mcz7hMQFjXHytXEN57MJ51uWTerETWgEx78v8ADty5EL7lkYIAAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='CASE_2_T5' width='192'>
      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
      Ke3/Aysn7ie9kXMOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='CASE_3_2nd_way' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAbQ0lEQVR4nO3dWWwcd4Lf8W9VV/V9kd287/uQdVCSJXns8cweTnZnk8EGm7xuHgNkgSyC
      IO/zliAPQR42T0EWyAaL3SCzzmax9njWlj0ztmWZokTq4H0fapFNNpvd7LvryANlemiP2EXH
      LZKu/wcQIHb1v/5/FutX9a9/XZJpmiaCYFPyaTdAEE6TCIBgayIAgq2JAJw1psnGwiT/8A/v
      s76d/trk3Y1FVrf3X1h86v4nvPvez5lejn1lvgaZTO64ivnsFx+SMw5+SqzN8Hd//y6/ujtB
      WX/RYWKR0dFHx/8+zy0++JiVZOmwrpXpCT64/StS+dKx5Q6+bpLJZCzVs7P0kIfLO4flni3P
      8P77t4mn97k3Ok6pmKdQ0g+/7/jJT37yE0tzFl6Kwt4Gb3/4iB//6E3++q9+Slejn/WtXRLp
      Eom1KX75wW20SBf69jwP52O0RT08mV9lI7ZDc2OUj3/+M179g3/G/b/7S/x9V1gY+5i5jR28
      5i7/4T//N6ItXSjFHT4dfUi0qQ23erAN1At7jM9tcbG/C4DV8Q/R276PvHqHXW8rmbVJJpfi
      NLfUMzcxytTcAt5II8sLi7Q31XDnk08oyl6erS2wMjtJ0VlDTcADgGlqfPz5E14dGUYGMrFJ
      3h3f5p/8zmvIssnMxOcsbWZoCclMrqch/Yx02WB+dpaZ6Vk8LpP/+J/+C4FoG9m9LXZiMZZi
      T6mNNrI0O024ru5wSz56d5T+Vy7iUWUK6Rh/8/Nx/vDHb6EgMT83w/L9d3h3dJOQx8BQA2IP
      cNbs7z2jJtqJyx0gTImFufvcvr+Ms7DBZ4tZrl3oIZdc5q//zy9YHn2Hzx7P87/+722CtTWH
      85BlJxf76lhYT1Au64zffo+4FKCnb4grvQ38xf/8KwrJZX76zp3DMuvzU7T2Dh9py/idD5nd
      LhEsrfHTdz9ldvQ9Pv70E+4sFggW1liK51laXuYXf/82jcM3+Ozdt/noo19x6XI377//2eF8
      cjvruKOtOJ7//GxlgbbeYZxuN7tz91jMBVDjE9x7NMknE0usPrnP0vo6dx6t0ezM8iRu0NPb
      x62RAT7/6F1iGRMjscL41Cz3Hi+gPJ+vqWdJllzUeA4+ySbWCTV1oypOvB4Py8sLdHR2M3Lz
      ezT6dH55574IwFkTjLSR2Jwnn90jKXsIAq+MvErE7wJZplQsgmlS09zFH//Jv+dyk4fWnmH6
      2hoO52HoJR7MxunzbPNoR+XKQCcaEoZWxjBNnN4a3vrDP+aP3rryvITJzFKcoZ6GI20ZujBM
      qVBGlSUirb38y3/1p1xodIPkoFgsHn5PkiQMw0A3TJweL27VAaZxOH32yRT9r3wZruaeQZae
      PCCfzZIva5iGga7ryIqCoZUPuztenx9FljEBU9fQDRPZHeLG9Utce+117v7sbbqHRw7nu/Ho
      Hi2XXkV6/rO/rpPd1WmKpQLpTB4Ah6pSLBSoaR0it3ZfdIHOGsXpp7PBx+jEDL/7e79HKBQi
      VFNLbV0TztwzcmotQxcu0xk2GZ9eo62nl0hNmGhNAACnE6YmZ7j2g9+nrbkZLbFCqKWXtrZ2
      2mtk1pMGb1zr4+7oOLWNbQQ8Tkrpp8xvS1zobTlsh+ryEm3q4NpwMykjRE+tyeOFGF0DFzD2
      1pmZX6Xz0g16miNcu3GT+UdjXPzeb9Pe3EC0rp5AMES0NgR6gbuPV7h1eQjp+Zrp9EdoCZo8
      mFpiYOQmzv0NSuE+Xr1yEWN3CV9jD52dHTRGa6lvqCdUG2W4PczMWpL+3g4ikSiKy8PC9Cxv
      vvVbuBwHM/703gS3rl9GkaXny9JHb0uIu/ce09DWQV1tmJ6hK+wsz+Cra6YQW0A6zRNh5XIZ
      VVVPq3rhuf3EJnlHgPqwr+J3Da3A53fuoLuj3Lp+8XBlexGtkGZjt0Bnc/231VwAttdn2dGC
      DHU1Pf/EZHFpie7uHo5v0YFCOs7jxcTpBiCRSBCJRE6rekEQxwCCvYkACLYmAiDYmgiAYGsi
      AIKtiQAItiYCINiaCIBgayIAgq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDYmgiAYGsiAIKt
      iQAItiYCINiaUvkr1aPrOqlU6jSbINjcqQZAlmV8vspPIhCEajnVAEiShKKcahMEmxPHAIKt
      iQAItiYCINiaCIBgayIAgq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDYmgiAYGsiAIKtiQAI
      tiYCINiaCIBga1UNgFYuksnmMEwTTdPANCmXy9WsUhBOpIq3Y2nMTU2hG2WkQBtSMUF3ax2T
      qymuX+qvXrWCcAJVflG2ydLUOFJtN1tzo+RNH69//3UUDAzDIJlMEg6Hq1e9IFRQxT2AydTE
      PUKtgzRHAmR3GgiWCuxlCtQFXDgcDmRZFvcEC6eqemufnuHpsxSZ0gyG0Y/PF6BjcJDJ2WXq
      LgwiPf+aJEnHzkYQqqnKXaDjJRIJIpHIaVUvCGIYVLA3EQDB1kQABFsTARBsTQRAsDURAMHW
      RAAEWxMBEGxNBECwNREAwdZEAARbEwEQbE0EQLA1EQDB1kQABFsTARBszVIANjY2+OzuZ9Vu
      iyC8dBUDMDc/RyaTIbV38je6x5ZnuPvgCQArK8vo5TxTMwsnb6UgVMkLA2AYBgsLC9z59A7F
      UvEbzdwfaUYxcgBksxkWJp9Q39r+zVoqCFXwwpviTdNkbn6O1tZWgoEgWp124pkHg8HD/6d3
      YmQNH10eFcMwDv+JB2UJp6mKN8VrLM8v8WRmmuuv/YDdrQ16Wut5uJTgxsgQEuKmeOH0VQxA
      JrOP3x8gn83g9PhxWB43MkjvpTEAp8uDqsioqkKxWMLpcokACGfCsatzcjvG3/7t28zOzvLB
      e++QPlFvRSYYDhMOh/F6XKiqCki4nq/8gnAWHBuAbDqJYZg8e7ZF/9U3CLteVrME4eV4YQBM
      Q+fh9CJubY/79+/xwe3bZEovs2mCUH3HPhqxo6sLs6Odf/HK5ZfVHkF4qV4cAEliffYR96cW
      mJmZx+kL84/eeguP+hJbJwhVduwokGmabG4sEdtK0t43RDTo49t8lq0YBRJO27EHwZIk8fmd
      T0CWuP3uO+ROfi5MEM60iqP6Ia+b+fl5JE8Y1fEymiQIL0/F9wPsl2V+9E9/TMDj/Fa7P4Jw
      FlTcA+TiC/zZn/1X/vwv/7cYBhW+c158EGyaFDK7LMb26O/tQrV+DYRl4iBYOG0vPhFmGrz9
      Nz8lvjbFz345/jLbJAgvzbEBMEwdly/CxswdRu9PUNRfZtMEofpeGABJdnDl8giSJDEycl28
      zE74ThIvyRNsTTwVQrC1qgZAKxXIZHOYpklZK4NpUiqJsVTh7Kjei7JNnQejo6hOlZrOC2S3
      1+huiTK1vs+1i31Vq1YQTqJ6xwDFOBNLOlf6vEzMJMknZsmbft5483UUDm6I397epiaXR9/c
      PFLUCPiRursx1tZxJJNHpinRCKXmZljfQP7KND0URO7sRHn2DD2+/ZVpIeTODoyVFRyp9JFp
      jvp6tKZGjOVlHOn9o22prYXWFtSnT9ETu0fnWVuD3NaGubiEnMkcnWdTI1p9PebCInI2e2Sa
      WV+H2diIurqGnjr6uBktGsXR0ow5N4+czx+ZJre2oEcimHNzyPnC0Xk2N2FGoyiLSxhfqU9r
      qMfR2AgzM0jFo3tgub0dvSYM0zNIX907t7dhhMM45uYwC0efDFJubkKpqyN3bwzzeTlJkjBM
      A//rr6PvpShMTh4pI8kS3tdeQ08mKUxNH53mcOC9dRMtkaAwPXN0mqLgvXkDPZGgODt3dJqq
      4r3xKtr2DsW5r0xzOfFev44Wj1Ocn+fX13TZ7cZz7WoVA6AluT+Z5EpfgEerBZxGEkepQE33
      JeqDB7eW7e7uIr/7M/bfefdIUc/160T/3b8l+T/+gsx7Pz8yzXvrJpE//Tck//ufk/ng9tFp
      b7xO5E/+dVV+HeG7qXpdICWMjwXuTsS5cOUqybhGx8AAk3PL1IcGK94XfNyw6zedJghfVb0A
      IDF4+dXDn8KdXQBcHB6sXpWCcEJVDEB1ea5dxVFTc+Qztb3tlFojnFfnNwAjI3hGRk67GcI5
      J06ECbYmAiDYmgiAYGsiAIKtiQAItnamR4FC//yPCP7Bj458JrnEA0qFb8+ZDoDD7we//7Sb
      IXyHiS6QYGsiAIKtiQAItiYCINiaCIBgayIAgq2JAAi2JgIg2FpVA/B0aYbPHjwGYHllCb2c
      Z3J6vppVCsKJVPVMcLCuGXX34A7/bDbL/OQTGnsvY+U+/FN8YJ1gI99+AAyd2enH+Ou7aKkL
      HX68n4iR0310e1RM08QwDh6NgmF8bRamaaBp4n1MQvV9+wGQHQxcuAKUWZqdIRaLEYsnCUZa
      uNrWwINH09wcGUaRZeTn/75KkuTnb5YXhOqqYhfIQX1zMz9sakZ1uqmvHURRHFy9EKpcVBBe
      kioGQMYfCH7tU6fTWb0qBeGExDCoYGsiAIKtiQAItiYCINiaCIBgayIAgq2JAAi2JgIg2JoI
      gGBrIgCCrZ36i7IDuTza1taRzx3hMK7enlNqlWAnpx4A8aZ44TSJLpBgayIAgq2JAAi2dqpP
      h9Y0jUQi8Runmab5wnf+imlne9pZaYeVaacaAEVRXngQfNYWlJhmfdoX4yrfZJqtAnCcX2+0
      aZpfLjhZtvym+G9WzuTIuJgkVeWt9b+5nRKSbK2+rw3eVbmdJ6nvhX+Dl7QsQeKLjyqVO7MB
      +JLG+OgYkuoEycWFkQtYu6lS48HdUWSXG8nh4cLlIazdZq+zsbJGUdd5tpnke2/cwFGhhGkW
      2I7nyKV3KBomqstHR2drxXIHitz91ee4An5c3jCDg93WypllVpfW0DCIJ7LcujnCi//UB0r5
      ffbzGnvbcTTA7QvT3tpQsRyAoRVYW32KZpRJZHRuXn3FSitZm3vCdraMjER77yDRoKdimZ2t
      OJKksZPcB2Sa2jsIeqz91Wcf3qdx4DJhj7W/9jkIAGimxEBvLxLyiRqs46C3txdJki2ujAAO
      mtraME3Y29qhDBbKuqird1HwKSTT+8iK29JKdUhx09Pbiywr1kclJJXWjg5MTBJbDzCoPKKh
      uv3Uuk3y+zt4vXU4TOuPnpEVF60dHWDqbI89tlxOL5eob+0m7Hbg9lpbiSP1dRSzKbYTWRqb
      wjgc1v/qwZCPB3fvEAwE6R0eJuw9/pVa5yAAEk31EbY2N5EkJ96g3+JKItFQV8vW5iayw403
      YLWcwebGBkXdoKmnHytvJDvYzeYZG3tCT3/nyVZ+ZOoiQbY2N1Hdfnx+r7XyZpmna+toQOfg
      kKWAS5JEMbvD5nYCh6JilHaI1EctlTW0Ik/XYuhA//CQlRYCUNvQxNZunIIk09DSjlOpXJsk
      SSzNzpPOG9REFLb2JAY6o5bqk2UFl6pgmhqmhSV5DoZBZQyjSKYAiqyfoMEyWjnH7m6KVCp1
      gvok9lM77O3tsRnfsVTCNDVWFzfIl3Lk8nkKhRInOb2uOBxIksnOzu4JSskkd+Ok9vaI7yQt
      l1JdQZxSmdj6HJKvxvLylIBEYpu95C7bu9aWZ3IngSk7cDgcyPKX/XIr6pqipPZ2mJ57Sl2d
      9UfpbG4l8ThVGuqC7KXyFb9/DvYAZbZ3c4CL/WyefE8PPkvlCiTSJRySE6deRMPqL1sknXdy
      4+YlHn4+ShFwVywjE66NMqi4MMs5MsXSCfYCCu3d3ZjAxL376FjbKulaBk2u4drVfsY+H0On
      s+Lvl9vbYiOewl87yO+PRH7jQ8lepJBJ4gw280p/M6P3JqC7pWIZt9dFWVOpqztYgm7V+uom
      O9xcuXmLmnAYp2q9A9vR3YlhlFnZ2GHgQuU15RzsAZy0t0bJ5pKY4ajFlR/ATVt7Kw0RlbLL
      b/HAGcBDa4Ob8fFxfE1tFlb+gyfZhWqcbG2mSaQyFBJblC3Xp7G6tMTS0iLhplbLWySHEiDk
      KTE+Pk6kpcNSN8blC5KKr/Lw0ThjY2NMzq1Y3lN5QvW4jT3GJx7R2t1nKeB6qcT+/j6ZTIZM
      JkNZ//pjMF8kVFNDNhnn49s/ZyWetlwun02xur6JaRhoul7x++dgD6CzGdsmFA5BuUwZLI7m
      QCYZZz9fRnJ4LW9ZwSCTzWGaBtnU/gn2HB58zgye+j7Mwp7lNoKDfHaPvCbh9DkwsHLQbVIq
      bpMp+rl4sY1HDyZob2uo2E6H6uHarTfxTk0SiHYgm0XLrTS0MvliCcOA/fQ+Zl2oYggKxTJu
      p8zObhqQ8IetB2BlZoKF7RJXb75JXdjaZs80DBI7KYYujeByHD/k+oVzEACTMioXh4eBk4zb
      lkjnZK5dv37C+kpkCirXro+csJxMMFxDcvcZTrf/BMcAefKan2vXrR9Ygsmz1Q1isTSQItre
      bXm5lAopSobBbnwfvbRNU0uzpb1HMbeH4m/iUl/lrs8Xog0NFPNZJIcLkHA7rXdlei/exLc6
      wycf3ea1H/4uTbWVQxBbXSBbLPJ4YhzFodIzOEjo/I8CGWR2d5iamkKS3QxfGrSwdS0z/XCK
      TCbFvbExFMXLK1eGLZQrMflgikwmzdjYGIozwCuXBiwupAyxrT0kKYBeTGDQWXHFMvQCT8an
      2c9kGBvL4vLVMDzUY2GFlOkYuIohTbGXLZ3o4NLlqcHtWGbt6SItPf2W9oqlfIrZhXVS2SK5
      1DP8NY0M9LRa6gZ9cSJsL7ZAIjpEX1PAUjufrcyyulPg2vVrhHzWOrDBSCPD4VrS2QIgWxpx
      OgfHAA4cqozT5cLltNqxUBm6fImmplaifhf5UsniL+rkwtUBjKJJV/8FQrJ+gr68l9poFLea
      pmCqluqTHW4uXb9INNLMtevXcGiVRy2+oJdTJPYdjFy5wtbyIlZG9LVyjsXFZWQ1RGdXKwGL
      4/JOT4j+3hbAxfDFy5j5fcvt1MolcrkcuqyAZn1p7ib2aGxuxKkqlroycHBpja6VKRaLFIsF
      dhM7FErHL5lzEACJgaEhAn4/Pr8Ho2z15I3ObnyTeNbEb5YoWa7PwB+qYy+2xOJqDOu9Vgmv
      CrLLT034JE/Alkgnt4k93SCds95KhxLASYrxiXHctXWWujGyw0l9QwP5rTjexkYi4a8/vPhF
      DE0nWl/H8uwkT7f3LJdzeXzU1tbS2jVEb2ut5XKqCslkikwmi2bx4Nnj9fJ0dRVZdZJJxIjv
      ZjEq3O91DrpAOvNzizS2trC6NMfK8io3Xr+FS660VXBy4ZUBUnkdv99P5RPwX/AxNNyBgYHL
      F7Z0IuxAnrWnaS6PDCLJDktbFtPUKZWhv7+L3XSW3oG+E5wJdtDZ00u+qKO6rP92kiQh8fwA
      8QRdJ0+oniZyKGqYYG3h2IvMvrA085hoZw/jn9xB9Tpo6r9JV4O1A9qO/ovkCkVMU8J1gmFQ
      p6qAQ0V1ugg0NOB1Hd9rOBd7AFVRCNdG8Lo8BHwui90SndmZecqlPE8eT1nqIhzQePLwEVub
      WxTLhsV+bolHY1MkU5tMTk4yt7BK5QE4MA2NQqGEYUoEAn4MTbN88GxoaSYnHzM9uc7M1LSl
      coZeIr65ibMuQnZzk0TS+vBiObfH1Mwcm5ubzM5MMTY+WbHO3H4eh6IydOUql4a7yaYyluvb
      XF1g7PMHzM4+YSdjvevUd/EKHkkn0tpLa8Rf8fvnYA/goK+nhbHRuwQirfQMduGztOXS0U2V
      xsZGErEtdKz+shKGaRIIhZBl1eJGUsEbDvOPLw1wd3QChydk8dojg9jGM3r7u1EUx4kuoZAk
      J4GaRsx4DIOwpQAoqpee/v4T1PIlWXbg8gboaG8lsZtD0YscXHf5Yu1drUyM3kNVFIplnauv
      3rRcXyZbIhoNEqwNsZ/KQrjyGZn41hayWSa1nwVy+Px+/O7j9wDn4Kb4Enc+fsDwxUGQZIKh
      oIXdlk4mU4JymsW1OM0dXdSFK28NDi6FNojHNikZBrLDRWNzvYWrQVOMjT4j4svgbB5md2GS
      /huvWjqJVs6nefzoMTlDIRiKcGG410J9Jns7W8jeMOnNVbz17UQC1rtB34hpktyOEdvZp6O7
      B0kr4fNbPy15UsVCDl3X2Hgap7OnB6ej8ubBNE12nq2xuZulq7cPRSui+P3HbvjOQRfIgV5K
      s7yywupqzFLXAnLMTK1RzmXxR1osrvwAJbbjexTyOXK5HPlCwWK5ID5niu2ii6awG8Xvt3Ts
      YOhFZqZmUYKNvHbrBpcsrPwA5dwuU/NPmR39iKKvkYXHjywul2+umEsyM79KIZ9lI7aFt4or
      P0BseZ6pmfmDM8l5ayfsZh+Oslt20tvVxuPPPmR0aqXiCn4OukAyr735Q8qajvUTYTKZZIzZ
      IuSJk0vVMnih38J5ABe51AJFhw/ZyFAy3Javshwe+XL3PmzxaklJVhi4OIKqKicay9f1ApgK
      aCqakaVc0iyeQf7/YOiovhr6ultwqNV9zVUxnyO9n6W5exi/04GnQjfmC7kiXGxrRJUlurva
      ybmbKwbgHHSBNEY//YTdfR2nqvDG7/zAwnU9Jlr51w8oJRRVsdDHzvD5nSUaAgXyNb2Uny7S
      d/PVE4wgvRyGXmQzto2OiSTLKIqb+oZIVXfnWjnHwtwyhiThDUbosHgjzTeR2NpgO7kPkows
      yTS1dRCwcEPMfuIZk/OrB28fdfq4cmkYpcJo4TnYA5jIziCRcAmjaKCBhQBIKN/oNasGmb1d
      0AxKuRX0VPZElzW/LLLDRXNb60ut0ygViMefokt+XBmNjtaGqtWVTu3T3tPP0qNRkgWDaHOH
      pXKBSBO3Ik0nquuMB8CgVIK+vi7KxTz7RcnSgeU3F+B7P7xxuNJLklzl+s4PvVwiUNuIVjbR
      9eq+xDy9lyaa3WFfquFyn4vYdopaf11V6jrzAchmcujlAoWygepQqrxFlvB4vVWt4TwyTQNX
      oI7BgTDZvQSyt6Zq3R+Aru42pmZXGbp4hfJejPr6mqrVdcaPATQWpmbIlDQkyUFbdw+1AbGC
      vmylQpqZ6SUaO3u+HFGTpKqG4GU54wEwKZe1gysKDY17d8a4/ttvim7JKdDLBT756EPUcB01
      kUYGe9q+EwE4410gCfXwYNZJf3/PeThx8Z1TzCWZnFrl6vffwu+xenb8fDjjewDhLDjuaW7n
      3RnfAwhnwXdxxf+C6FEItiYCINiaCIBgayIAgq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDY
      mgiAYGsiAIKtiQAItiYCINiaCIBgayIAgq2JAAi2JgIg2JoIgGBrIgCCrYkACLYmAiDYmgiA
      YGsiAIKtiQAItiYCINja/wPZMh1KaL9chwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='CASE_3_simple_way' width='192'>
      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
      ZPoNAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
